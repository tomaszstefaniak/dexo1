{"version":3,"file":"main-4.0.1-162.js","mappings":"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","sources":["webpack://@jup-ag/terminal/./node_modules/@solana/spl-token/lib/index.browser.esm.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { sendAndConfirmTransaction as sendAndConfirmTransaction$1, PublicKey, Keypair, Transaction, SystemProgram, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\n\nvar buffer = {};\n\nvar base64Js = {};\n\nbase64Js.byteLength = byteLength;\nbase64Js.toByteArray = toByteArray;\nbase64Js.fromByteArray = fromByteArray;\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens (b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4);\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n\n  var curByte = 0;\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen;\n\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = (tmp >> 16) & 0xFF;\n    arr[curByte++] = (tmp >> 8) & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[curByte++] = (tmp >> 8) & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    );\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    );\n  }\n\n  return parts.join('')\n}\n\nvar ieee754 = {};\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nieee754.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = (nBytes * 8) - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n};\n\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = (nBytes * 8) - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n(function (exports) {\n\nconst base64 = base64Js;\nconst ieee754$1 = ieee754;\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null;\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  );\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1);\n    const proto = { foo: function () { return 42 } };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n});\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n});\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value);\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n};\n\nfunction allocUnsafe (size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n};\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0;\n  let buf = createBuffer(length);\n\n  const actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n  const buf = createBuffer(length);\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0;\n    const buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length;\n  let y = b.length;\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        );\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length;\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  let str = '';\n  const max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>'\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart;\n  let y = end - start;\n  const len = Math.min(x, y);\n\n  const thisCopy = this.slice(thisStart, thisEnd);\n  const targetCopy = target.slice(start, end);\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1;\n  let arrLength = arr.length;\n  let valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i;\n  if (dir) {\n    let foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true;\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  const remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  const strLen = string.length;\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  let i;\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  const res = [];\n\n  let i = start;\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1;\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  let out = '';\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end);\n  let res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256));\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  const newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  let val = this[offset + --byteLength];\n  let mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n});\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n});\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  let i = byteLength;\n  let mul = 1;\n  let val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n});\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n});\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754$1.read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754$1.read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754$1.read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754$1.read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  let mul = 1;\n  let i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  let i = byteLength - 1;\n  let mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = (value & 0xff);\n  this[offset + 1] = (value >>> 8);\n  return offset + 2\n};\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = (value >>> 8);\n  this[offset + 1] = (value & 0xff);\n  return offset + 2\n};\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = (value >>> 24);\n  this[offset + 2] = (value >>> 16);\n  this[offset + 1] = (value >>> 8);\n  this[offset] = (value & 0xff);\n  return offset + 4\n};\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = (value >>> 24);\n  this[offset + 1] = (value >>> 16);\n  this[offset + 2] = (value >>> 8);\n  this[offset + 3] = (value & 0xff);\n  return offset + 4\n};\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n});\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n});\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  let i = 0;\n  let mul = 1;\n  let sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  let i = byteLength - 1;\n  let mul = 1;\n  let sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = (value & 0xff);\n  this[offset + 1] = (value >>> 8);\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = (value >>> 8);\n  this[offset + 1] = (value & 0xff);\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = (value & 0xff);\n  this[offset + 1] = (value >>> 8);\n  this[offset + 2] = (value >>> 16);\n  this[offset + 3] = (value >>> 24);\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = (value >>> 24);\n  this[offset + 1] = (value >>> 16);\n  this[offset + 2] = (value >>> 8);\n  this[offset + 3] = (value & 0xff);\n  return offset + 4\n};\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n});\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n});\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  ieee754$1.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  ieee754$1.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  const len = end - start;\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0);\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  let i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding);\n    const len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {};\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super();\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      });\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`;\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name;\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      });\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  };\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError);\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError);\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg\n  }, RangeError);\n\nfunction addNumericalSeparator (val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`;\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength);\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo;\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i;\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef';\n  const table = new Array(256);\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table\n})();\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n}(buffer));\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});\n\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\nvar inherits$1 = inherits;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect$1(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect$1.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect$1.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect$1.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect$1.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect$1.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect$1 &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (buffer.isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global$1.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nfunction AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits$1(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return inspect$1(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nfunction equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nfunction notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nfunction deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nfunction deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (buffer.isBuffer(actual) && buffer.isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (buffer.isBuffer(actual) !== buffer.isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nfunction notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nfunction strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nfunction notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nfunction throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nfunction doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nfunction ifError(err) {\n  if (err) throw err;\n}\n\nvar Layout$1 = {};\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nLayout$1.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nLayout$1.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nLayout$1.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (buffer.Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(buffer.Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!buffer.Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new buffer.Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!buffer.Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new buffer.Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nLayout$1.ExternalLayout = ExternalLayout;\nLayout$1.GreedyCount = GreedyCount;\nLayout$1.OffsetLayout = OffsetLayout;\nLayout$1.UInt = UInt;\nLayout$1.UIntBE = UIntBE;\nLayout$1.Int = Int;\nLayout$1.IntBE = IntBE;\nLayout$1.Float = Float;\nLayout$1.FloatBE = FloatBE;\nLayout$1.Double = Double;\nLayout$1.DoubleBE = DoubleBE;\nLayout$1.Sequence = Sequence;\nLayout$1.Structure = Structure;\nLayout$1.UnionDiscriminator = UnionDiscriminator;\nLayout$1.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nLayout$1.Union = Union;\nLayout$1.VariantLayout = VariantLayout;\nLayout$1.BitStructure = BitStructure;\nLayout$1.BitField = BitField;\nLayout$1.Boolean = Boolean;\nLayout$1.Blob = Blob;\nLayout$1.CString = CString;\nLayout$1.UTF8 = UTF8;\nLayout$1.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nLayout$1.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nLayout$1.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nvar u8 = Layout$1.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nLayout$1.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nLayout$1.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nvar u32 = Layout$1.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nLayout$1.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nLayout$1.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nLayout$1.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nLayout$1.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nLayout$1.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nLayout$1.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nLayout$1.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nLayout$1.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nLayout$1.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nLayout$1.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nLayout$1.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nLayout$1.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nLayout$1.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nLayout$1.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nLayout$1.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nLayout$1.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nLayout$1.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nLayout$1.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nLayout$1.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nLayout$1.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nLayout$1.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nLayout$1.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nLayout$1.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nLayout$1.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nLayout$1.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nLayout$1.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nvar struct = Layout$1.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nLayout$1.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nLayout$1.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nLayout$1.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nLayout$1.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nvar blob = Layout$1.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nLayout$1.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nLayout$1.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nLayout$1.const = ((value, property) => new Constant(value, property));\n\n//      \n/**\n * Layout for a public key\n */\n\nconst publicKey = (property = 'publicKey') => {\n  return blob(32, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\nconst uint64 = (property = 'uint64') => {\n  return blob(8, property);\n};\n\n//      \nfunction sendAndConfirmTransaction(title, connection, transaction, ...signers) {\n  return sendAndConfirmTransaction$1(connection, transaction, signers, {\n    skipPreflight: false\n  });\n}\n\nconst TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nconst ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\n\nfunction pubkeyToBuffer(publicKey) {\n  return buffer.Buffer.from(publicKey.toBuffer());\n}\n/**\n * 64-bit value\n */\n\n\nclass u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n    const b = buffer.Buffer.from(a);\n\n    if (b.length === 8) {\n      return b;\n    }\n\n    assert(b.length < 8, 'u64 too large');\n    const zeroPad = buffer.Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a u64 from Buffer representation\n   */\n\n\n  static fromBuffer(buffer) {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  }\n\n}\n\nfunction isAccount(accountOrPublicKey) {\n  return 'publicKey' in accountOrPublicKey;\n}\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3\n}; // The address of the special mint for wrapped native token.\n\nconst NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/**\n * Information about the mint\n */\n\nconst MintLayout = struct([u32('mintAuthorityOption'), publicKey('mintAuthority'), uint64('supply'), u8('decimals'), u8('isInitialized'), u32('freezeAuthorityOption'), publicKey('freezeAuthority')]);\n/**\n * Information about an account\n */\n\n/**\n * @private\n */\n\nconst AccountLayout = struct([publicKey('mint'), publicKey('owner'), uint64('amount'), u32('delegateOption'), publicKey('delegate'), u8('state'), u32('isNativeOption'), uint64('isNative'), uint64('delegatedAmount'), u32('closeAuthorityOption'), publicKey('closeAuthority')]);\n/**\n * Information about an multisig\n */\n\n/**\n * @private\n */\n\nconst MultisigLayout = struct([u8('m'), u8('n'), u8('is_initialized'), publicKey('signer1'), publicKey('signer2'), publicKey('signer3'), publicKey('signer4'), publicKey('signer5'), publicKey('signer6'), publicKey('signer7'), publicKey('signer8'), publicKey('signer9'), publicKey('signer10'), publicKey('signer11')]);\n/**\n * An ERC20-like Token\n */\n\nclass Token {\n  /**\n   * @private\n   */\n\n  /**\n   * The public key identifying this mint\n   */\n\n  /**\n   * Program Identifier for the Token program\n   */\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n\n  /**\n   * Fee payer\n   */\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(connection, publicKey, programId, payer) {\n    _defineProperty(this, \"connection\", void 0);\n\n    _defineProperty(this, \"publicKey\", void 0);\n\n    _defineProperty(this, \"programId\", void 0);\n\n    _defineProperty(this, \"associatedProgramId\", void 0);\n\n    _defineProperty(this, \"payer\", void 0);\n\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID\n    });\n  }\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptMint(connection) {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptAccount(connection) {\n    return await connection.getMinimumBalanceForRentExemption(AccountLayout.span);\n  }\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptMultisig(connection) {\n    return await connection.getMinimumBalanceForRentExemption(MultisigLayout.span);\n  }\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n\n\n  static async createMint(connection, payer, mintAuthority, freezeAuthority, decimals, programId) {\n    const mintAccount = Keypair.generate();\n    const token = new Token(connection, mintAccount.publicKey, programId, payer); // Allocate memory for the account\n\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(connection);\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: mintAccount.publicKey,\n      lamports: balanceNeeded,\n      space: MintLayout.span,\n      programId\n    }));\n    transaction.add(Token.createInitMintInstruction(programId, mintAccount.publicKey, decimals, mintAuthority, freezeAuthority)); // Send the two instructions\n\n    await sendAndConfirmTransaction('createAccount and InitializeMint', connection, transaction, payer, mintAccount);\n    return token;\n  }\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n\n\n  async createAccount(owner) {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(this.connection);\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: this.payer.publicKey,\n      newAccountPubkey: newAccount.publicKey,\n      lamports: balanceNeeded,\n      space: AccountLayout.span,\n      programId: this.programId\n    }));\n    const mintPublicKey = this.publicKey;\n    transaction.add(Token.createInitAccountInstruction(this.programId, mintPublicKey, newAccount.publicKey, owner)); // Send the two instructions\n\n    await sendAndConfirmTransaction('createAccount and InitializeAccount', this.connection, transaction, this.payer, newAccount);\n    return newAccount.publicKey;\n  }\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n\n\n  async createAssociatedTokenAccount(owner) {\n    const associatedAddress = await Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner);\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(owner, associatedAddress) {\n    await sendAndConfirmTransaction('CreateAssociatedTokenAccount', this.connection, new Transaction().add(Token.createAssociatedTokenAccountInstruction(this.associatedProgramId, this.programId, this.publicKey, associatedAddress, owner, this.payer.publicKey)), this.payer);\n    return associatedAddress;\n  }\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n\n\n  async getOrCreateAssociatedAccountInfo(owner) {\n    const associatedAddress = await Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner); // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (err.message === FAILED_TO_FIND_ACCOUNT || err.message === INVALID_ACCOUNT_OWNER) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n        } catch (err) {// ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        } // Now this should always succeed\n\n\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n\n\n  static async createWrappedNativeAccount(connection, programId, owner, payer, amount) {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(connection); // Create a new account\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: newAccount.publicKey,\n      lamports: balanceNeeded,\n      space: AccountLayout.span,\n      programId\n    })); // Send lamports to it (these will be wrapped into native tokens by the token program)\n\n    transaction.add(SystemProgram.transfer({\n      fromPubkey: payer.publicKey,\n      toPubkey: newAccount.publicKey,\n      lamports: amount\n    })); // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n\n    transaction.add(Token.createInitAccountInstruction(programId, NATIVE_MINT, newAccount.publicKey, owner)); // Send the three instructions\n\n    await sendAndConfirmTransaction('createAccount, transfer, and initializeAccount', connection, transaction, payer, newAccount);\n    return newAccount.publicKey;\n  }\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n\n\n  async createMultisig(m, signers) {\n    const multisigAccount = Keypair.generate(); // Allocate memory for the account\n\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(this.connection);\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: this.payer.publicKey,\n      newAccountPubkey: multisigAccount.publicKey,\n      lamports: balanceNeeded,\n      space: MultisigLayout.span,\n      programId: this.programId\n    })); // create the new account\n\n    let keys = [{\n      pubkey: multisigAccount.publicKey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    signers.forEach(signer => keys.push({\n      pubkey: signer,\n      isSigner: false,\n      isWritable: false\n    }));\n    const dataLayout = struct([u8('instruction'), u8('m')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 2,\n      // InitializeMultisig instruction\n      m\n    }, data);\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data\n    }); // Send the two instructions\n\n    await sendAndConfirmTransaction('createAccount and InitializeMultisig', this.connection, transaction, this.payer, multisigAccount);\n    return multisigAccount.publicKey;\n  }\n  /**\n   * Retrieve mint information\n   */\n\n\n  async getMintInfo() {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = buffer.Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n\n    return mintInfo;\n  }\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n\n\n  async getAccountInfo(account, commitment) {\n    const info = await this.connection.getAccountInfo(account, commitment);\n\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = buffer.Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(`Invalid account mint: ${JSON.stringify(accountInfo.mint)} !== ${JSON.stringify(this.publicKey)}`);\n    }\n\n    return accountInfo;\n  }\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n\n\n  async getMultisigInfo(multisig) {\n    const info = await this.connection.getAccountInfo(multisig);\n\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = buffer.Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n    return multisigInfo;\n  }\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n\n\n  async transfer(source, destination, owner, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    return await sendAndConfirmTransaction('Transfer', this.connection, new Transaction().add(Token.createTransferInstruction(this.programId, source, destination, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n\n\n  async approve(account, delegate, owner, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('Approve', this.connection, new Transaction().add(Token.createApproveInstruction(this.programId, account, delegate, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  async revoke(account, owner, multiSigners) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('Revoke', this.connection, new Transaction().add(Token.createRevokeInstruction(this.programId, account, ownerPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n\n\n  async setAuthority(account, newAuthority, authorityType, currentAuthority, multiSigners) {\n    let currentAuthorityPublicKey;\n    let signers;\n\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('SetAuthority', this.connection, new Transaction().add(Token.createSetAuthorityInstruction(this.programId, account, newAuthority, authorityType, currentAuthorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n\n\n  async mintTo(dest, authority, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('MintTo', this.connection, new Transaction().add(Token.createMintToInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n\n\n  async burn(account, owner, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('Burn', this.connection, new Transaction().add(Token.createBurnInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n\n\n  async closeAccount(account, dest, authority, multiSigners) {\n    let authorityPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('CloseAccount', this.connection, new Transaction().add(Token.createCloseAccountInstruction(this.programId, account, dest, authorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n\n\n  async freezeAccount(account, authority, multiSigners) {\n    let authorityPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('FreezeAccount', this.connection, new Transaction().add(Token.createFreezeAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n\n\n  async thawAccount(account, authority, multiSigners) {\n    let authorityPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('ThawAccount', this.connection, new Transaction().add(Token.createThawAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n\n\n  async transferChecked(source, destination, owner, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    return await sendAndConfirmTransaction('TransferChecked', this.connection, new Transaction().add(Token.createTransferCheckedInstruction(this.programId, source, this.publicKey, destination, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n\n\n  async approveChecked(account, delegate, owner, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('ApproveChecked', this.connection, new Transaction().add(Token.createApproveCheckedInstruction(this.programId, account, this.publicKey, delegate, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n\n\n  async mintToChecked(dest, authority, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('MintToChecked', this.connection, new Transaction().add(Token.createMintToCheckedInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n\n\n  async burnChecked(account, owner, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('BurnChecked', this.connection, new Transaction().add(Token.createBurnCheckedInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n\n\n  async syncNative(nativeAccount) {\n    await sendAndConfirmTransaction('SyncNative', this.connection, new Transaction().add(Token.createSyncNativeInstruction(this.programId, nativeAccount)), this.payer);\n  }\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n\n\n  static createInitMintInstruction(programId, mint, decimals, mintAuthority, freezeAuthority) {\n    let keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const commandDataLayout = struct([u8('instruction'), u8('decimals'), publicKey('mintAuthority'), u8('option'), publicKey('freezeAuthority')]);\n    let data = buffer.Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 0,\n        // InitializeMint instruction\n        decimals,\n        mintAuthority: pubkeyToBuffer(mintAuthority),\n        option: freezeAuthority === null ? 0 : 1,\n        freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0))\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n\n\n  static createInitAccountInstruction(programId, mint, account, owner) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 1 // InitializeAccount instruction\n\n    }, data);\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n\n\n  static createTransferInstruction(programId, source, destination, owner, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 3,\n      // Transfer instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n\n\n  static createApproveInstruction(programId, account, delegate, owner, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 4,\n      // Approve instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: delegate,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createRevokeInstruction(programId, account, owner, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 5 // Approve instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n\n\n  static createSetAuthorityInstruction(programId, account, newAuthority, authorityType, currentAuthority, multiSigners) {\n    const commandDataLayout = struct([u8('instruction'), u8('authorityType'), u8('option'), publicKey('newAuthority')]);\n    let data = buffer.Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 6,\n        // SetAuthority instruction\n        authorityType: AuthorityTypeCodes[authorityType],\n        option: newAuthority === null ? 0 : 1,\n        newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0))\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: currentAuthority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: currentAuthority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n\n\n  static createMintToInstruction(programId, mint, dest, authority, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 7,\n      // MintTo instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: dest,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n\n\n  static createBurnInstruction(programId, mint, account, owner, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 8,\n      // Burn instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createCloseAccountInstruction(programId, account, dest, owner, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 9 // CloseAccount instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: dest,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createFreezeAccountInstruction(programId, account, mint, authority, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 10 // FreezeAccount instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createThawAccountInstruction(programId, account, mint, authority, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 11 // ThawAccount instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n\n\n  static createTransferCheckedInstruction(programId, source, mint, destination, owner, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 12,\n      // TransferChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n\n\n  static createApproveCheckedInstruction(programId, account, mint, delegate, owner, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 13,\n      // ApproveChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: delegate,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n\n\n  static createMintToCheckedInstruction(programId, mint, dest, authority, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 14,\n      // MintToChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: dest,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n\n\n  static createBurnCheckedInstruction(programId, mint, account, owner, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 15,\n      // BurnChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n\n\n  static createSyncNativeInstruction(programId, nativeAccount) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 17 // SyncNative instruction\n\n    }, data);\n    let keys = [{\n      pubkey: nativeAccount,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n\n\n  static async getAssociatedTokenAddress(associatedProgramId, programId, mint, owner, allowOwnerOffCurve = false) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n\n    return (await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedProgramId))[0];\n  }\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n\n\n  static createAssociatedTokenAccountInstruction(associatedProgramId, programId, mint, associatedAccount, owner, payer) {\n    const data = buffer.Buffer.alloc(0);\n    let keys = [{\n      pubkey: payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: associatedAccount,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data\n    });\n  }\n\n}\n\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, AccountLayout, MintLayout, NATIVE_MINT, TOKEN_PROGRAM_ID, Token, u64 };\n//# sourceMappingURL=index.browser.esm.js.map\n"],"names":["buffer","base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","ieee754","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","exports","base64","ieee754$1","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","global$1","g","self","window","inherits$1","create","ctor","superCtor","super_","TempCtor","inspect$1","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","origin","add","isObject","keys","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","isString","primitive","simple","JSON","stringify","isNull","formatPrimitive","visibleKeys","hash","forEach","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","ar","base","braces","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","line","re","objectToString","isPrimitive","o","prop","_functionsHaveNames","hasOwn","objectKeys","pSlice","functionsHaveNames","pToString","arrbuf","DataView","assert","fail","ok","regex","getName","func","AssertionError","options","expected","operator","generatedMessage","truncate","stackStartFunction","captureStackTrace","err","fn_name","next_line","substring","something","rawname","_deepEqual","strict","memos","getTime","source","global","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","kb","sort","objEquiv","object","expectedException","test","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","Layout$1","Layout","span","property","makeDestinationObject","decode","encode","getSpan","replicate","rv","assign","fromArray","values","nameWithProperty","bindConstructorLayout","Class","layout","layout_","boundConstructor_","ExternalLayout","isCount","GreedyCount","elementSpan","rem","OffsetLayout","UInt","UIntBE","Int","IntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","count","elo","v","Structure","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","Blob","CString","srcb","UTF8","maxSpan","Constant","greedy","u8","u16","u24","u32","u40","u48","nu64","u16be","u24be","u32be","u40be","u48be","nu64be","s8","s16","s24","s32","s40","s48","ns64","s16be","s24be","s32be","s40be","s48be","ns64be","f32","f32be","f64","f64be","struct","seq","unionLayoutDiscriminator","blob","cstr","utf8","const","publicKey","uint64","sendAndConfirmTransaction","title","connection","transaction","signers","skipPreflight","TOKEN_PROGRAM_ID","PublicKey","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","toBuffer","u64","toArray","reverse","zeroPad","fromBuffer","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","Token","programId","payer","associatedProgramId","getMinBalanceRentForExemptMint","getMinimumBalanceForRentExemption","getMinBalanceRentForExemptAccount","getMinBalanceRentForExemptMultisig","createMint","mintAuthority","freezeAuthority","decimals","mintAccount","Keypair","generate","token","balanceNeeded","Transaction","SystemProgram","createAccount","fromPubkey","newAccountPubkey","lamports","space","createInitMintInstruction","owner","newAccount","mintPublicKey","createInitAccountInstruction","createAssociatedTokenAccount","associatedAddress","getAssociatedTokenAddress","createAssociatedTokenAccountInternal","createAssociatedTokenAccountInstruction","getOrCreateAssociatedAccountInfo","getAccountInfo","createWrappedNativeAccount","amount","transfer","toPubkey","createMultisig","multisigAccount","pubkey","isSigner","isWritable","SYSVAR_RENT_PUBKEY","signer","dataLayout","instruction","getMintInfo","info","mintInfo","mintAuthorityOption","supply","isInitialized","freezeAuthorityOption","account","commitment","accountInfo","address","mint","delegateOption","delegate","delegatedAmount","state","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","getMultisigInfo","multisig","multisigInfo","signer1","signer2","signer3","signer4","signer5","signer6","signer7","signer8","signer9","signer10","signer11","destination","multiSigners","ownerPublicKey","createTransferInstruction","approve","createApproveInstruction","revoke","createRevokeInstruction","setAuthority","newAuthority","authorityType","currentAuthority","currentAuthorityPublicKey","createSetAuthorityInstruction","mintTo","authority","createMintToInstruction","burn","createBurnInstruction","closeAccount","authorityPublicKey","createCloseAccountInstruction","freezeAccount","createFreezeAccountInstruction","thawAccount","createThawAccountInstruction","transferChecked","createTransferCheckedInstruction","approveChecked","createApproveCheckedInstruction","mintToChecked","createMintToCheckedInstruction","burnChecked","createBurnCheckedInstruction","syncNative","nativeAccount","createSyncNativeInstruction","commandDataLayout","encodeLength","option","TransactionInstruction","allowOwnerOffCurve","isOnCurve","findProgramAddress","associatedAccount"],"sourceRoot":""}