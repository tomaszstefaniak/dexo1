"use strict";(self.webpackChunk_jup_ag_terminal=self.webpackChunk_jup_ag_terminal||[]).push([[150],{2769:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0})},15150:function(e,o,r){var t=this&&this.__createBinding||(Object.create?function(e,o,r,t){void 0===t&&(t=r),Object.defineProperty(e,t,{enumerable:!0,get:function(){return o[r]}})}:function(e,o,r,t){void 0===t&&(t=r),e[t]=o[r]}),n=this&&this.__exportStar||function(e,o){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(o,r)||t(o,e,r)};Object.defineProperty(o,"__esModule",{value:!0}),n(r(50743),o),n(r(2769),o)},50743:function(e,o,r){var t=this&&this.__createBinding||(Object.create?function(e,o,r,t){void 0===t&&(t=r),Object.defineProperty(e,t,{enumerable:!0,get:function(){return o[r]}})}:function(e,o,r,t){void 0===t&&(t=r),e[t]=o[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,o){Object.defineProperty(e,"default",{enumerable:!0,value:o})}:function(e,o){e.default=o}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var o={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&t(o,e,r);return n(o,e),o};Object.defineProperty(o,"__esModule",{value:!0}),o.TokenLendingError=o.AnchorError=o.CustomProgramError=o.CusperUnknownError=o.initCusper=o.ErrorResolver=void 0;const i=r(99188),s=a(r(50889)),d=r(72665);class c{constructor(e){this.resolveErrorFromCode=e}errorFromCode(e,o,r=!0){let t=null!=this.resolveErrorFromCode?this.resolveErrorFromCode(e):null;return null!=t?this.passPreparedError(t,null!=o?o:this.errorFromCode):(t=m.fromCode(e),null!=t?this.passPreparedError(t,null!=o?o:this.errorFromCode):(t=g.fromCode(e),null!=t?this.passPreparedError(t,null!=o?o:this.errorFromCode):r?(t=new l(e,"CusperUnknownError","cusper does not know this error"),this.passPreparedError(t,null!=o?o:this.errorFromCode)):void 0))}errorFromProgramLogs(e,o=!0){const r=(0,i.errorCodeFromLogs)(e);return null==r?null:this.errorFromCode(r,this.errorFromProgramLogs,o)}throwError(e){const o=null!=e.logs&&this.errorFromProgramLogs(e.logs,!0)||new l(-1,"Error created without logs and thus without error code");throw this.passPreparedError(o,this.throwError)}passPreparedError(e,o){return null==e?null:("function"==typeof Error.captureStackTrace&&Error.captureStackTrace(e,o),e)}}o.ErrorResolver=c,o.initCusper=function(e){return new c(e)};class l extends Error{constructor(e,...o){super(...o),this.code=e,this.name="CusperUnknownError"}}o.CusperUnknownError=l;class u extends Error{constructor(e,o,...r){super(...r),this.code=e,this.name=`CustomProgramError#${o}`}}o.CustomProgramError=u;class m extends Error{constructor(e,o,...r){super(...r),this.code=e,this.name=`AnchorError#${o}`}static fromCode(e){const o=m.errorMap.get(e);return null!=o?new m(o.code,o.name,o.message):null}toString(){return`${this.name}: ${this.message}`}}o.AnchorError=m,m.errorMap=Object.entries(s.LangErrorCode).reduce(((e,[o,r])=>(e.set(r,{code:r,name:o,message:s.LangErrorMessage.get(r)}),e)),new Map);class g extends Error{constructor(e,o,...r){super(...r),this.code=e,this.name=`TokenLendingError#${o}`}static fromCode(e){const o=g.errorMap.get(e);return null!=o?new g(o.code,o.name,o.message):null}toString(){return`${this.name}: ${this.message}`}}o.TokenLendingError=g,g.errorMap=d.tokenLendingErrors},50889:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.LangErrorMessage=o.LangErrorCode=void 0,o.LangErrorCode={InstructionMissing:100,InstructionFallbackNotFound:101,InstructionDidNotDeserialize:102,InstructionDidNotSerialize:103,IdlInstructionStub:1e3,IdlInstructionInvalidProgram:1001,ConstraintMut:2e3,ConstraintHasOne:2001,ConstraintSigner:2002,ConstraintRaw:2003,ConstraintOwner:2004,ConstraintRentExempt:2005,ConstraintSeeds:2006,ConstraintExecutable:2007,ConstraintState:2008,ConstraintAssociated:2009,ConstraintAssociatedInit:2010,ConstraintClose:2011,ConstraintAddress:2012,ConstraintZero:2013,ConstraintTokenMint:2014,ConstraintTokenOwner:2015,ConstraintMintMintAuthority:2016,ConstraintMintFreezeAuthority:2017,ConstraintMintDecimals:2018,ConstraintSpace:2019,AccountDiscriminatorAlreadySet:3e3,AccountDiscriminatorNotFound:3001,AccountDiscriminatorMismatch:3002,AccountDidNotDeserialize:3003,AccountDidNotSerialize:3004,AccountNotEnoughKeys:3005,AccountNotMutable:3006,AccountOwnedByWrongProgram:3007,InvalidProgramId:3008,InvalidProgramExecutable:3009,AccountNotSigner:3010,AccountNotSystemOwned:3011,AccountNotInitialized:3012,AccountNotProgramData:3013,StateInvalidAddress:4e3,Deprecated:5e3},o.LangErrorMessage=new Map([[o.LangErrorCode.InstructionMissing,"8 byte instruction identifier not provided"],[o.LangErrorCode.InstructionFallbackNotFound,"Fallback functions are not supported"],[o.LangErrorCode.InstructionDidNotDeserialize,"The program could not deserialize the given instruction"],[o.LangErrorCode.InstructionDidNotSerialize,"The program could not serialize the given instruction"],[o.LangErrorCode.IdlInstructionStub,"The program was compiled without idl instructions"],[o.LangErrorCode.IdlInstructionInvalidProgram,"The transaction was given an invalid program for the IDL instruction"],[o.LangErrorCode.ConstraintMut,"A mut constraint was violated"],[o.LangErrorCode.ConstraintHasOne,"A has_one constraint was violated"],[o.LangErrorCode.ConstraintSigner,"A signer constraint was violated"],[o.LangErrorCode.ConstraintRaw,"A raw constraint was violated"],[o.LangErrorCode.ConstraintOwner,"An owner constraint was violated"],[o.LangErrorCode.ConstraintRentExempt,"A rent exempt constraint was violated"],[o.LangErrorCode.ConstraintSeeds,"A seeds constraint was violated"],[o.LangErrorCode.ConstraintExecutable,"An executable constraint was violated"],[o.LangErrorCode.ConstraintState,"A state constraint was violated"],[o.LangErrorCode.ConstraintAssociated,"An associated constraint was violated"],[o.LangErrorCode.ConstraintAssociatedInit,"An associated init constraint was violated"],[o.LangErrorCode.ConstraintClose,"A close constraint was violated"],[o.LangErrorCode.ConstraintAddress,"An address constraint was violated"],[o.LangErrorCode.ConstraintZero,"Expected zero account discriminant"],[o.LangErrorCode.ConstraintTokenMint,"A token mint constraint was violated"],[o.LangErrorCode.ConstraintTokenOwner,"A token owner constraint was violated"],[o.LangErrorCode.ConstraintMintMintAuthority,"A mint mint authority constraint was violated"],[o.LangErrorCode.ConstraintMintFreezeAuthority,"A mint freeze authority constraint was violated"],[o.LangErrorCode.ConstraintMintDecimals,"A mint decimals constraint was violated"],[o.LangErrorCode.ConstraintSpace,"A space constraint was violated"],[o.LangErrorCode.AccountDiscriminatorAlreadySet,"The account discriminator was already set on this account"],[o.LangErrorCode.AccountDiscriminatorNotFound,"No 8 byte discriminator was found on the account"],[o.LangErrorCode.AccountDiscriminatorMismatch,"8 byte discriminator did not match what was expected"],[o.LangErrorCode.AccountDidNotDeserialize,"Failed to deserialize the account"],[o.LangErrorCode.AccountDidNotSerialize,"Failed to serialize the account"],[o.LangErrorCode.AccountNotEnoughKeys,"Not enough account keys given to the instruction"],[o.LangErrorCode.AccountNotMutable,"The given account is not mutable"],[o.LangErrorCode.AccountOwnedByWrongProgram,"The given account is owned by a different program than expected"],[o.LangErrorCode.InvalidProgramId,"Program ID was not as expected"],[o.LangErrorCode.InvalidProgramExecutable,"Program account is not executable"],[o.LangErrorCode.AccountNotSigner,"The given account did not sign"],[o.LangErrorCode.AccountNotSystemOwned,"The given account is not owned by the system program"],[o.LangErrorCode.AccountNotInitialized,"The program expected this account to be already initialized"],[o.LangErrorCode.AccountNotProgramData,"The given account is not a program data account"],[o.LangErrorCode.StateInvalidAddress,"The given state account does not have the correct address"],[o.LangErrorCode.Deprecated,"The API being used is deprecated and should no longer be used"]])},72665:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.tokenLendingErrors=void 0,o.tokenLendingErrors=new Map([[0,{code:0,message:'Failed to unpack instruction data"',name:"InstructionUnpackError"}],[1,{code:1,message:'Account is already initialized"',name:"AlreadyInitialized"}],[2,{code:2,message:'Lamport balance below rent-exempt threshold"',name:"NotRentExempt"}],[3,{code:3,message:'Market authority is invalid"',name:"InvalidMarketAuthority"}],[4,{code:4,message:'Market owner is invalid"',name:"InvalidMarketOwner"}],[5,{code:5,message:'Input account owner is not the program address"',name:"InvalidAccountOwner"}],[6,{code:6,message:'Input token account is not owned by the correct token program id"',name:"InvalidTokenOwner"}],[7,{code:7,message:'Input token account is not valid"',name:"InvalidTokenAccount"}],[8,{code:8,message:'Input token mint account is not valid"',name:"InvalidTokenMint"}],[9,{code:9,message:'Input token program account is not valid"',name:"InvalidTokenProgram"}],[10,{code:10,message:'Input amount is invalid"',name:"InvalidAmount"}],[11,{code:11,message:'Input config value is invalid"',name:"InvalidConfig"}],[12,{code:12,message:'Input account must be a signer"',name:"InvalidSigner"}],[13,{code:13,message:'Invalid account input"',name:"InvalidAccountInput"}],[14,{code:14,message:'Math operation overflow"',name:"MathOverflow"}],[15,{code:15,message:'Token initialize mint failed"',name:"TokenInitializeMintFailed"}],[16,{code:16,message:'Token initialize account failed"',name:"TokenInitializeAccountFailed"}],[17,{code:17,message:'Token transfer failed"',name:"TokenTransferFailed"}],[18,{code:18,message:'Token mint to failed"',name:"TokenMintToFailed"}],[19,{code:19,message:'Token burn failed"',name:"TokenBurnFailed"}],[20,{code:20,message:'Insufficient liquidity available"',name:"InsufficientLiquidity"}],[21,{code:21,message:'Input reserve has collateral disabled"',name:"ReserveCollateralDisabled"}],[22,{code:22,message:'Reserve state needs to be refreshed"',name:"ReserveStale"}],[23,{code:23,message:'Withdraw amount too small"',name:"WithdrawTooSmall"}],[24,{code:24,message:'Withdraw amount too large"',name:"WithdrawTooLarge"}],[25,{code:25,message:'Borrow amount too small to receive liquidity after fees"',name:"BorrowTooSmall"}],[26,{code:26,message:'Borrow amount too large for deposited collateral"',name:"BorrowTooLarge"}],[27,{code:27,message:'Repay amount too small to transfer liquidity"',name:"RepayTooSmall"}],[28,{code:28,message:'Liquidation amount too small to receive collateral"',name:"LiquidationTooSmall"}],[29,{code:29,message:'Cannot liquidate healthy obligations"',name:"ObligationHealthy"}],[30,{code:30,message:'Obligation state needs to be refreshed"',name:"ObligationStale"}],[31,{code:31,message:'Obligation reserve limit exceeded"',name:"ObligationReserveLimit"}],[32,{code:32,message:'Obligation owner is invalid"',name:"InvalidObligationOwner"}],[33,{code:33,message:'Obligation deposits are empty"',name:"ObligationDepositsEmpty"}],[34,{code:34,message:'Obligation borrows are empty"',name:"ObligationBorrowsEmpty"}],[35,{code:35,message:'Obligation deposits have zero value"',name:"ObligationDepositsZero"}],[36,{code:36,message:'Obligation borrows have zero value"',name:"ObligationBorrowsZero"}],[37,{code:37,message:'Invalid obligation collateral"',name:"InvalidObligationCollateral"}],[38,{code:38,message:'Invalid obligation liquidity"',name:"InvalidObligationLiquidity"}],[39,{code:39,message:'Obligation collateral is empty"',name:"ObligationCollateralEmpty"}],[40,{code:40,message:'Obligation liquidity is empty"',name:"ObligationLiquidityEmpty"}],[41,{code:41,message:'Interest rate is negative"',name:"NegativeInterestRate"}],[42,{code:42,message:'Input oracle config is invalid"',name:"InvalidOracleConfig"}],[43,{code:43,message:'Input flash loan receiver program account is not valid"',name:"InvalidFlashLoanReceiverProgram"}],[44,{code:44,message:'Not enough liquidity after flash loan"',name:"NotEnoughLiquidityAfterFlashLoan"}]])},99188:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.errorCodeFromLogs=void 0;const r=/Custom program error: (0x[a-f0-9]+)/i;o.errorCodeFromLogs=function(e){for(const o of e){const e=o.match(r);if(null==e)continue;const t=e[1];try{return parseInt(t)}catch(e){}}return null}}}]);
//# sourceMappingURL=main-4.0.1-150.js.map