{"version":3,"file":"main-4.0.1-857.js","mappings":"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","sources":["webpack://@jup-ag/terminal/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js","webpack://@jup-ag/terminal/./node_modules/retry/lib/retry.js","webpack://@jup-ag/terminal/./node_modules/retry/index.js","webpack://@jup-ag/terminal/./node_modules/rpc-websockets/dist/index.browser.mjs","webpack://@jup-ag/terminal/./node_modules/retry/lib/retry_operation.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && options.forever,\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * opts.minTimeout * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","import { Buffer } from 'buffer';\nimport { EventEmitter } from 'eventemitter3';\n\n// node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\nvar WebSocketBrowserImpl = class extends EventEmitter {\n  socket;\n  /** Instantiate a WebSocket class\n  * @constructor\n  * @param {String} address - url to a websocket server\n  * @param {(Object)} options - websocket options\n  * @param {(String|Array)} protocols - a list of protocols\n  * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n  */\n  constructor(address, options, protocols) {\n    super();\n    this.socket = new window.WebSocket(address, protocols);\n    this.socket.onopen = () => this.emit(\"open\");\n    this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n    this.socket.onerror = (error) => this.emit(\"error\", error);\n    this.socket.onclose = (event) => {\n      this.emit(\"close\", event.code, event.reason);\n    };\n  }\n  /**\n  * Sends data through a websocket connection\n  * @method\n  * @param {(String|Object)} data - data to be sent via websocket\n  * @param {Object} optionsOrCallback - ws options\n  * @param {Function} callback - a callback called once the data is sent\n  * @return {Undefined}\n  */\n  send(data, optionsOrCallback, callback) {\n    const cb = callback || optionsOrCallback;\n    try {\n      this.socket.send(data);\n      cb();\n    } catch (error) {\n      cb(error);\n    }\n  }\n  /**\n  * Closes an underlying socket\n  * @method\n  * @param {Number} code - status code explaining why the connection is being closed\n  * @param {String} reason - a description why the connection is closing\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  close(code, reason) {\n    this.socket.close(code, reason);\n  }\n  addEventListener(type, listener, options) {\n    this.socket.addEventListener(type, listener, options);\n  }\n};\nfunction WebSocket(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}\n\n// src/lib/utils.ts\nvar DefaultDataPack = class {\n  encode(value) {\n    return JSON.stringify(value);\n  }\n  decode(value) {\n    return JSON.parse(value);\n  }\n};\n\n// src/lib/client.ts\nvar CommonClient = class extends EventEmitter {\n  address;\n  rpc_id;\n  queue;\n  options;\n  autoconnect;\n  ready;\n  reconnect;\n  reconnect_timer_id;\n  reconnect_interval;\n  max_reconnects;\n  rest_options;\n  current_reconnects;\n  generate_request_id;\n  socket;\n  webSocketFactory;\n  dataPack;\n  /**\n  * Instantiate a Client class.\n  * @constructor\n  * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n  * @param {String} address - url to a websocket server\n  * @param {Object} options - ws options object with reconnect parameters\n  * @param {Function} generate_request_id - custom generation request Id\n  * @param {DataPack} dataPack - data pack contains encoder and decoder\n  * @return {CommonClient}\n  */\n  constructor(webSocketFactory, address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5,\n    ...rest_options\n  } = {}, generate_request_id, dataPack) {\n    super();\n    this.webSocketFactory = webSocketFactory;\n    this.queue = {};\n    this.rpc_id = 0;\n    this.address = address;\n    this.autoconnect = autoconnect;\n    this.ready = false;\n    this.reconnect = reconnect;\n    this.reconnect_timer_id = void 0;\n    this.reconnect_interval = reconnect_interval;\n    this.max_reconnects = max_reconnects;\n    this.rest_options = rest_options;\n    this.current_reconnects = 0;\n    this.generate_request_id = generate_request_id || (() => typeof this.rpc_id === \"number\" ? ++this.rpc_id : Number(this.rpc_id) + 1);\n    if (!dataPack) this.dataPack = new DefaultDataPack();\n    else this.dataPack = dataPack;\n    if (this.autoconnect)\n      this._connect(this.address, {\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects,\n        ...this.rest_options\n      });\n  }\n  /**\n  * Connects to a defined server if not connected already.\n  * @method\n  * @return {Undefined}\n  */\n  connect() {\n    if (this.socket) return;\n    this._connect(this.address, {\n      autoconnect: this.autoconnect,\n      reconnect: this.reconnect,\n      reconnect_interval: this.reconnect_interval,\n      max_reconnects: this.max_reconnects,\n      ...this.rest_options\n    });\n  }\n  /**\n  * Calls a registered RPC method on server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object|Array} params - optional method parameters\n  * @param {Number} timeout - RPC reply timeout value\n  * @param {Object} ws_opts - options passed to ws\n  * @return {Promise}\n  */\n  call(method, params, timeout, ws_opts) {\n    if (!ws_opts && \"object\" === typeof timeout) {\n      ws_opts = timeout;\n      timeout = null;\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const rpc_id = this.generate_request_id(method, params);\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params: params || void 0,\n        id: rpc_id\n      };\n      this.socket.send(this.dataPack.encode(message), ws_opts, (error) => {\n        if (error) return reject(error);\n        this.queue[rpc_id] = { promise: [resolve, reject] };\n        if (timeout) {\n          this.queue[rpc_id].timeout = setTimeout(() => {\n            delete this.queue[rpc_id];\n            reject(new Error(\"reply timeout\"));\n          }, timeout);\n        }\n      });\n    });\n  }\n  /**\n  * Logins with the other side of the connection.\n  * @method\n  * @param {Object} params - Login credentials object\n  * @return {Promise}\n  */\n  async login(params) {\n    const resp = await this.call(\"rpc.login\", params);\n    if (!resp) throw new Error(\"authentication failed\");\n    return resp;\n  }\n  /**\n  * Fetches a list of client's methods registered on server.\n  * @method\n  * @return {Array}\n  */\n  async listMethods() {\n    return await this.call(\"__listMethods\");\n  }\n  /**\n  * Sends a JSON-RPC 2.0 notification to server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object} params - optional method parameters\n  * @return {Promise}\n  */\n  notify(method, params) {\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params\n      };\n      this.socket.send(this.dataPack.encode(message), (error) => {\n        if (error) return reject(error);\n        resolve();\n      });\n    });\n  }\n  /**\n  * Subscribes for a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async subscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.on\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\n        \"Failed subscribing to an event '\" + event + \"' with: \" + result[event]\n      );\n    return result;\n  }\n  /**\n  * Unsubscribes from a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async unsubscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.off\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\"Failed unsubscribing from an event with: \" + result);\n    return result;\n  }\n  /**\n  * Closes a WebSocket connection gracefully.\n  * @method\n  * @param {Number} code - socket close code\n  * @param {String} data - optional data to be sent before closing\n  * @return {Undefined}\n  */\n  close(code, data) {\n    this.socket.close(code || 1e3, data);\n  }\n  /**\n  * Enable / disable automatic reconnection.\n  * @method\n  * @param {Boolean} reconnect - enable / disable reconnection\n  * @return {Undefined}\n  */\n  setAutoReconnect(reconnect) {\n    this.reconnect = reconnect;\n  }\n  /**\n  * Set the interval between reconnection attempts.\n  * @method\n  * @param {Number} interval - reconnection interval in milliseconds\n  * @return {Undefined}\n  */\n  setReconnectInterval(interval) {\n    this.reconnect_interval = interval;\n  }\n  /**\n  * Set the maximum number of reconnection attempts.\n  * @method\n  * @param {Number} max_reconnects - maximum reconnection attempts\n  * @return {Undefined}\n  */\n  setMaxReconnects(max_reconnects) {\n    this.max_reconnects = max_reconnects;\n  }\n  /**\n  * Connection/Message handler.\n  * @method\n  * @private\n  * @param {String} address - WebSocket API address\n  * @param {Object} options - ws options object\n  * @return {Undefined}\n  */\n  _connect(address, options) {\n    clearTimeout(this.reconnect_timer_id);\n    this.socket = this.webSocketFactory(address, options);\n    this.socket.addEventListener(\"open\", () => {\n      this.ready = true;\n      this.emit(\"open\");\n      this.current_reconnects = 0;\n    });\n    this.socket.addEventListener(\"message\", ({ data: message }) => {\n      if (message instanceof ArrayBuffer)\n        message = Buffer.from(message).toString();\n      try {\n        message = this.dataPack.decode(message);\n      } catch (error) {\n        return;\n      }\n      if (message.notification && this.listeners(message.notification).length) {\n        if (!Object.keys(message.params).length)\n          return this.emit(message.notification);\n        const args = [message.notification];\n        if (message.params.constructor === Object) args.push(message.params);\n        else\n          for (let i = 0; i < message.params.length; i++)\n            args.push(message.params[i]);\n        return Promise.resolve().then(() => {\n          this.emit.apply(this, args);\n        });\n      }\n      if (!this.queue[message.id]) {\n        if (message.method) {\n          return Promise.resolve().then(() => {\n            this.emit(message.method, message?.params);\n          });\n        }\n        return;\n      }\n      if (\"error\" in message === \"result\" in message)\n        this.queue[message.id].promise[1](\n          new Error(\n            'Server response malformed. Response must include either \"result\" or \"error\", but not both.'\n          )\n        );\n      if (this.queue[message.id].timeout)\n        clearTimeout(this.queue[message.id].timeout);\n      if (message.error) this.queue[message.id].promise[1](message.error);\n      else this.queue[message.id].promise[0](message.result);\n      delete this.queue[message.id];\n    });\n    this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error));\n    this.socket.addEventListener(\"close\", ({ code, reason }) => {\n      if (this.ready)\n        setTimeout(() => this.emit(\"close\", code, reason), 0);\n      this.ready = false;\n      this.socket = void 0;\n      if (code === 1e3) return;\n      this.current_reconnects++;\n      if (this.reconnect && (this.max_reconnects > this.current_reconnects || this.max_reconnects === 0))\n        this.reconnect_timer_id = setTimeout(\n          () => this._connect(address, options),\n          this.reconnect_interval\n        );\n    });\n  }\n};\n\n// src/index.browser.ts\nvar Client = class extends CommonClient {\n  constructor(address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5\n  } = {}, generate_request_id) {\n    super(\n      WebSocket,\n      address,\n      {\n        autoconnect,\n        reconnect,\n        reconnect_interval,\n        max_reconnects\n      },\n      generate_request_id\n    );\n  }\n};\n\nexport { Client, CommonClient, DefaultDataPack, WebSocket };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.mjs.map","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","RetryOperation","operation","options","timeouts","forever","unref","maxRetryTime","opts","retries","factor","minTimeout","maxTimeout","Infinity","randomize","key","Error","createTimeout","sort","a","b","attempt","random","Math","timeout","round","pow","min","wrap","obj","methods","method","original","op","callback","pop","err","retry","mainError","bind","WebSocketBrowserImpl","socket","constructor","address","protocols","super","window","WebSocket","onopen","onmessage","data","onerror","error","onclose","code","reason","send","optionsOrCallback","cb","close","addEventListener","type","DefaultDataPack","encode","value","JSON","stringify","decode","parse","CommonClient","rpc_id","queue","autoconnect","ready","reconnect","reconnect_timer_id","reconnect_interval","max_reconnects","rest_options","current_reconnects","generate_request_id","webSocketFactory","dataPack","Number","_connect","connect","params","ws_opts","Promise","resolve","reject","message","jsonrpc","id","promise","setTimeout","login","resp","listMethods","notify","subscribe","result","unsubscribe","setAutoReconnect","setReconnectInterval","interval","setMaxReconnects","clearTimeout","ArrayBuffer","Buffer","from","toString","notification","keys","then","_originalTimeouts","_timeouts","_options","_maxRetryTime","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_cachedTimeouts","reset","stop","currentTime","Date","getTime","unshift","shift","splice","self","timer","timeoutOps","try","console","log","start","errors","attempts","counts","mainErrorCount","count"],"sourceRoot":""}