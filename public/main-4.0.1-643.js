"use strict";(self.webpackChunk_jup_ag_terminal=self.webpackChunk_jup_ag_terminal||[]).push([[643],{62643:(e,t,r)=>{r.r(t),r.d(t,{Account:()=>N,AddressLookupTableAccount:()=>$e,AddressLookupTableInstruction:()=>Hr,AddressLookupTableProgram:()=>$r,Authorized:()=>is,BLOCKHASH_CACHE_TIMEOUT_MS:()=>Qe,BPF_LOADER_DEPRECATED_PROGRAM_ID:()=>L,BPF_LOADER_PROGRAM_ID:()=>Le,BpfLoader:()=>Ke,COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:()=>Jr,ComputeBudgetInstruction:()=>Fr,ComputeBudgetProgram:()=>Gr,Connection:()=>Ur,Ed25519Program:()=>Zr,Enum:()=>B,EpochSchedule:()=>Ve,FeeCalculatorLayout:()=>Pe,Keypair:()=>Vr,LAMPORTS_PER_SOL:()=>Es,LOOKUP_TABLE_INSTRUCTION_LAYOUTS:()=>Dr,Loader:()=>Ne,Lockup:()=>ns,MAX_SEED_LENGTH:()=>R,Message:()=>te,MessageAccountKeys:()=>U,MessageV0:()=>re,NONCE_ACCOUNT_LENGTH:()=>Be,NonceAccount:()=>Te,PACKET_DATA_SIZE:()=>K,PUBLIC_KEY_LENGTH:()=>x,PublicKey:()=>O,SIGNATURE_LENGTH_IN_BYTES:()=>q,SOLANA_SCHEMA:()=>T,STAKE_CONFIG_ID:()=>ss,STAKE_INSTRUCTION_LAYOUTS:()=>as,SYSTEM_INSTRUCTION_LAYOUTS:()=>xe,SYSVAR_CLOCK_PUBKEY:()=>le,SYSVAR_EPOCH_SCHEDULE_PUBKEY:()=>de,SYSVAR_INSTRUCTIONS_PUBKEY:()=>he,SYSVAR_RECENT_BLOCKHASHES_PUBKEY:()=>ge,SYSVAR_RENT_PUBKEY:()=>pe,SYSVAR_REWARDS_PUBKEY:()=>me,SYSVAR_SLOT_HASHES_PUBKEY:()=>ye,SYSVAR_SLOT_HISTORY_PUBKEY:()=>be,SYSVAR_STAKE_HISTORY_PUBKEY:()=>fe,Secp256k1Program:()=>ts,SendTransactionError:()=>ke,SolanaJSONRPCError:()=>Se,SolanaJSONRPCErrorCode:()=>we,StakeAuthorizationLayout:()=>cs,StakeInstruction:()=>os,StakeProgram:()=>us,Struct:()=>E,SystemInstruction:()=>Re,SystemProgram:()=>Ce,Transaction:()=>ae,TransactionExpiredBlockheightExceededError:()=>Y,TransactionExpiredNonceInvalidError:()=>M,TransactionExpiredTimeoutError:()=>j,TransactionInstruction:()=>oe,TransactionMessage:()=>ce,TransactionStatus:()=>ie,VALIDATOR_INFO_KEY:()=>ms,VERSION_PREFIX_MASK:()=>z,VOTE_PROGRAM_ID:()=>fs,ValidatorInfo:()=>bs,VersionedMessage:()=>se,VersionedTransaction:()=>ue,VoteAccount:()=>ws,VoteAuthorizationLayout:()=>gs,VoteInit:()=>ls,VoteInstruction:()=>ds,VoteProgram:()=>ps,clusterApiUrl:()=>vs,sendAndConfirmRawTransaction:()=>Ps,sendAndConfirmTransaction:()=>Ie});var s=r(48287),i=r(81829),n=r(39404),o=r.n(n),a=r(43466),c=r.n(a),u=r(78226),l=r(92755),d=r(601),h=r(30184),g=r(17251),p=r(40022),m=r.n(p),y=r(76409),b=r(77238),f=r(52959),k=r(96763);const w=i.ev.utils.randomPrivateKey,S=()=>{const e=i.ev.utils.randomPrivateKey(),t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},I=i.ev.getPublicKey;function A(e){try{return i.ev.ExtendedPoint.fromHex(e),!0}catch{return!1}}const _=(e,t)=>i.ev.sign(e,t.slice(0,32)),v=i.ev.verify,P=e=>s.Buffer.isBuffer(e)?e:e instanceof Uint8Array?s.Buffer.from(e.buffer,e.byteOffset,e.byteLength):s.Buffer.from(e);class E{constructor(e){Object.assign(this,e)}encode(){return s.Buffer.from((0,l.serialize)(T,this))}static decode(e){return(0,l.deserialize)(T,this,e)}static decodeUnchecked(e){return(0,l.deserializeUnchecked)(T,this,e)}}class B extends E{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map((e=>{this.enum=e}))}}const T=new Map;var W;const R=32,x=32;let C=1;class O extends E{constructor(e){if(super({}),this._bn=void 0,function(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"==typeof e){const t=c().decode(e);if(t.length!=x)throw new Error("Invalid public key input");this._bn=new(o())(t)}else this._bn=new(o())(e);if(this._bn.byteLength()>x)throw new Error("Invalid public key input")}}static unique(){const e=new O(C);return C+=1,new O(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return c().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(s.Buffer);if(e.length===x)return e;const t=s.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[Symbol.toStringTag](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const i=s.Buffer.concat([e.toBuffer(),s.Buffer.from(t),r.toBuffer()]),n=(0,u.sc)(i);return new O(n)}static createProgramAddressSync(e,t){let r=s.Buffer.alloc(0);e.forEach((function(e){if(e.length>R)throw new TypeError("Max seed length exceeded");r=s.Buffer.concat([r,P(e)])})),r=s.Buffer.concat([r,t.toBuffer(),s.Buffer.from("ProgramDerivedAddress")]);const i=(0,u.sc)(r);if(A(i))throw new Error("Invalid seeds, address must fall off the curve");return new O(i)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,i=255;for(;0!=i;){try{const n=e.concat(s.Buffer.from([i]));r=this.createProgramAddressSync(n,t)}catch(e){if(e instanceof TypeError)throw e;i--;continue}return[r,i]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return A(new O(e).toBytes())}}W=O,O.default=new W("11111111111111111111111111111111"),T.set(O,{kind:"struct",fields:[["_bn","u256"]]});class N{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){const t=P(e);if(64!==e.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=P(w()),this._publicKey=P(I(this._secretKey))}get publicKey(){return new O(this._publicKey)}get secretKey(){return s.Buffer.concat([this._secretKey,this._publicKey],64)}}const L=new O("BPFLoader1111111111111111111111111111111111"),K=1232,z=127,q=64;class Y extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(Y.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class j extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(j.prototype,"name",{value:"TransactionExpiredTimeoutError"});class M extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(M.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class U{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(const t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((e,r)=>{t.set(e.toBase58(),r)}));const r=e=>{const r=t.get(e.toBase58());if(void 0===r)throw new Error("Encountered an unknown instruction account key during compilation");return r};return e.map((e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map((e=>r(e.pubkey))),data:e.data})))}}const V=(e="publicKey")=>d.blob(32,e),D=(e="signature")=>d.blob(64,e),H=(e="string")=>{const t=d.struct([d.u32("length"),d.u32("lengthPadding"),d.blob(d.offset(d.u32(),-8),"chars")],e),r=t.decode.bind(t),i=t.encode.bind(t),n=t;return n.decode=(e,t)=>r(e,t).chars.toString(),n.encode=(e,t,r)=>{const n={chars:s.Buffer.from(e,"utf8")};return i(n,t,r)},n.alloc=e=>d.u32().span+d.u32().span+s.Buffer.from(e,"utf8").length,n};function $(e,t){const r=e=>{if(e.span>=0)return e.span;if("function"==typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const s=t[e.property];if(Array.isArray(s))return s.length*r(e.elementLayout)}else if("fields"in e)return $({layout:e},t[e.property]);return 0};let s=0;return e.layout.fields.forEach((e=>{s+=r(e)})),s}function F(e){let t=0,r=0;for(;;){let s=e.shift();if(t|=(127&s)<<7*r,r+=1,!(128&s))break}return t}function J(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}function G(e,t){if(!e)throw new Error(t||"Assertion failed")}class X{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){const r=new Map,s=e=>{const t=e.toBase58();let s=r.get(t);return void 0===s&&(s={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,s)),s},i=s(t);i.isSigner=!0,i.isWritable=!0;for(const t of e){s(t.programId).isInvoked=!0;for(const e of t.keys){const t=s(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}}return new X(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];G(e.length<=256,"Max static account keys length exceeded");const t=e.filter((([,e])=>e.isSigner&&e.isWritable)),r=e.filter((([,e])=>e.isSigner&&!e.isWritable)),s=e.filter((([,e])=>!e.isSigner&&e.isWritable)),i=e.filter((([,e])=>!e.isSigner&&!e.isWritable)),n={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:i.length};{G(t.length>0,"Expected at least one writable signer key");const[e]=t[0];G(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[n,[...t.map((([e])=>new O(e))),...r.map((([e])=>new O(e))),...s.map((([e])=>new O(e))),...i.map((([e])=>new O(e)))]]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable)),[s,i]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(0!==t.length||0!==s.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:s},{writable:r,readonly:i}]}drainKeysFoundInLookupTable(e,t){const r=new Array,s=new Array;for(const[i,n]of this.keyMetaMap.entries())if(t(n)){const t=new O(i),n=e.findIndex((e=>e.equals(t)));n>=0&&(G(n<256,"Max lookup table index exceeded"),r.push(n),s.push(t),this.keyMetaMap.delete(i))}return[r,s]}}const Z="Reached end of buffer unexpectedly";function Q(e){if(0===e.length)throw new Error(Z);return e.shift()}function ee(e,...t){const[r]=t;if(2===t.length?r+(t[1]??0)>e.length:r>=e.length)throw new Error(Z);return e.splice(...t)}class te{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map((e=>new O(e))),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new U(this.staticAccountKeys)}static compile(e){const t=X.compile(e.instructions,e.payerKey),[r,s]=t.getMessageComponents(),i=new U(s).compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:c().encode(e.data)})));return new te({header:r,accountKeys:s,recentBlockhash:e.recentBlockhash,instructions:i})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;return e>=this.header.numRequiredSignatures?e-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts:e<t-this.header.numReadonlySignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];J(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e,i=Array.from(c().decode(e.data));let n=[];J(n,t.length);let o=[];return J(o,i.length),{programIdIndex:r,keyIndicesCount:s.Buffer.from(n),keyIndices:t,dataLength:s.Buffer.from(o),data:i}}));let i=[];J(i,r.length);let n=s.Buffer.alloc(K);s.Buffer.from(i).copy(n);let o=i.length;r.forEach((e=>{const t=d.struct([d.u8("programIdIndex"),d.blob(e.keyIndicesCount.length,"keyIndicesCount"),d.seq(d.u8("keyIndex"),e.keyIndices.length,"keyIndices"),d.blob(e.dataLength.length,"dataLength"),d.seq(d.u8("userdatum"),e.data.length,"data")]).encode(e,n,o);o+=t})),n=n.slice(0,o);const a=d.struct([d.blob(1,"numRequiredSignatures"),d.blob(1,"numReadonlySignedAccounts"),d.blob(1,"numReadonlyUnsignedAccounts"),d.blob(t.length,"keyCount"),d.seq(V("key"),e,"keys"),V("recentBlockhash")]),u={numRequiredSignatures:s.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:s.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:s.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:s.Buffer.from(t),keys:this.accountKeys.map((e=>P(e.toBytes()))),recentBlockhash:c().decode(this.recentBlockhash)};let l=s.Buffer.alloc(2048);const h=a.encode(u,l);return n.copy(l,h),l.slice(0,h+n.length)}static from(e){let t=[...e];const r=Q(t);if(r!==(r&z))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const i=Q(t),n=Q(t),o=F(t);let a=[];for(let e=0;e<o;e++){const e=ee(t,0,x);a.push(new O(s.Buffer.from(e)))}const u=ee(t,0,x),l=F(t);let d=[];for(let e=0;e<l;e++){const e=Q(t),r=ee(t,0,F(t)),i=ee(t,0,F(t)),n=c().encode(s.Buffer.from(i));d.push({programIdIndex:e,accounts:r,data:n})}const h={header:{numRequiredSignatures:r,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:n},recentBlockhash:c().encode(s.Buffer.from(u)),accountKeys:a,instructions:d};return new te(h)}}class re{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new U(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;return e>=r?e-r<this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0):e>=this.header.numRequiredSignatures?e-t<r-t-this.header.numReadonlyUnsignedAccounts:e<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const s=e.find((e=>e.key.equals(r.accountKey)));if(!s)throw new Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(const e of r.writableIndexes){if(!(e<s.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.writable.push(s.state.addresses[e])}for(const e of r.readonlyIndexes){if(!(e<s.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.readonly.push(s.state.addresses[e])}}return t}static compile(e){const t=X.compile(e.instructions,e.payerKey),r=new Array,s={writable:new Array,readonly:new Array},i=e.addressLookupTableAccounts||[];for(const e of i){const i=t.extractTableLookup(e);if(void 0!==i){const[e,{writable:t,readonly:n}]=i;r.push(e),s.writable.push(...t),s.readonly.push(...n)}}const[n,o]=t.getMessageComponents(),a=new U(o,s).compileInstructions(e.instructions);return new re({header:n,staticAccountKeys:o,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){const e=Array();J(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();J(r,this.compiledInstructions.length);const s=this.serializeAddressTableLookups(),i=Array();J(i,this.addressTableLookups.length);const n=d.struct([d.u8("prefix"),d.struct([d.u8("numRequiredSignatures"),d.u8("numReadonlySignedAccounts"),d.u8("numReadonlyUnsignedAccounts")],"header"),d.blob(e.length,"staticAccountKeysLength"),d.seq(V(),this.staticAccountKeys.length,"staticAccountKeys"),V("recentBlockhash"),d.blob(r.length,"instructionsLength"),d.blob(t.length,"serializedInstructions"),d.blob(i.length,"addressTableLookupsLength"),d.blob(s.length,"serializedAddressTableLookups")]),o=new Uint8Array(K),a=n.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:c().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(i),serializedAddressTableLookups:s},o);return o.slice(0,a)}serializeInstructions(){let e=0;const t=new Uint8Array(K);for(const r of this.compiledInstructions){const s=Array();J(s,r.accountKeyIndexes.length);const i=Array();J(i,r.data.length),e+=d.struct([d.u8("programIdIndex"),d.blob(s.length,"encodedAccountKeyIndexesLength"),d.seq(d.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),d.blob(i.length,"encodedDataLength"),d.blob(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(s),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(i),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(K);for(const r of this.addressTableLookups){const s=Array();J(s,r.writableIndexes.length);const i=Array();J(i,r.readonlyIndexes.length),e+=d.struct([V("accountKey"),d.blob(s.length,"encodedWritableIndexesLength"),d.seq(d.u8(),r.writableIndexes.length,"writableIndexes"),d.blob(i.length,"encodedReadonlyIndexesLength"),d.seq(d.u8(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(s),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(i),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=Q(t),s=r&z;G(r!==s,"Expected versioned message but received legacy message"),G(0===s,`Expected versioned message with version 0 but found version ${s}`);const i={numRequiredSignatures:Q(t),numReadonlySignedAccounts:Q(t),numReadonlyUnsignedAccounts:Q(t)},n=[],o=F(t);for(let e=0;e<o;e++)n.push(new O(ee(t,0,x)));const a=c().encode(ee(t,0,x)),u=F(t),l=[];for(let e=0;e<u;e++){const e=Q(t),r=ee(t,0,F(t)),s=F(t),i=new Uint8Array(ee(t,0,s));l.push({programIdIndex:e,accountKeyIndexes:r,data:i})}const d=F(t),h=[];for(let e=0;e<d;e++){const e=new O(ee(t,0,x)),r=ee(t,0,F(t)),s=ee(t,0,F(t));h.push({accountKey:e,writableIndexes:r,readonlyIndexes:s})}return new re({header:i,staticAccountKeys:n,recentBlockhash:a,compiledInstructions:l,addressTableLookups:h})}}const se={deserializeMessageVersion(e){const t=e[0],r=t&z;return r===t?"legacy":r},deserialize:e=>{const t=se.deserializeMessageVersion(e);if("legacy"===t)return te.from(e);if(0===t)return re.deserialize(e);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let ie=function(e){return e[e.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",e[e.PROCESSED=1]="PROCESSED",e[e.TIMED_OUT=2]="TIMED_OUT",e[e.NONCE_INVALID=3]="NONCE_INVALID",e}({});const ne=s.Buffer.alloc(q).fill(0);class oe{constructor(e){this.keys=void 0,this.programId=void 0,this.data=s.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map((({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class ae{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((({publicKey:e})=>e.toJSON()))}}add(...e){if(0===e.length)throw new Error("No instructions");return e.forEach((e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new oe(e))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&k.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw new Error(`Transaction instruction index ${e} has undefined program id`);const s=[],i=[];t.forEach((e=>{e.keys.forEach((e=>{i.push({...e})}));const t=e.programId.toString();s.includes(t)||s.push(t)})),s.forEach((e=>{i.push({pubkey:new O(e),isSigner:!1,isWritable:!1})}));const n=[];i.forEach((e=>{const t=e.pubkey.toString(),r=n.findIndex((e=>e.pubkey.toString()===t));r>-1?(n[r].isWritable=n[r].isWritable||e.isWritable,n[r].isSigner=n[r].isSigner||e.isSigner):n.push(e)})),n.sort((function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})}));const o=n.findIndex((e=>e.pubkey.equals(r)));if(o>-1){const[e]=n.splice(o,1);e.isSigner=!0,e.isWritable=!0,n.unshift(e)}else n.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const e of this.signatures){const t=n.findIndex((t=>t.pubkey.equals(e.publicKey)));if(!(t>-1))throw new Error(`unknown signer: ${e.publicKey.toString()}`);n[t].isSigner||(n[t].isSigner=!0,k.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,u=0,l=0;const d=[],h=[];n.forEach((({pubkey:e,isSigner:t,isWritable:r})=>{t?(d.push(e.toString()),a+=1,r||(u+=1)):(h.push(e.toString()),r||(l+=1))}));const g=d.concat(h),p=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map((e=>g.indexOf(e.pubkey.toString()))),data:c().encode(t)}}));return p.forEach((e=>{G(e.programIdIndex>=0),e.accounts.forEach((e=>G(e>=0)))})),new te({header:{numRequiredSignatures:a,numReadonlySignedAccounts:u,numReadonlyUnsignedAccounts:l},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);return this.signatures.length===t.length&&this.signatures.every(((e,r)=>t[r].equals(e.publicKey)))||(this.signatures=t.map((e=>({signature:null,publicKey:e})))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw new Error("No signers");const t=new Set;this.signatures=e.filter((e=>{const r=e.toString();return!t.has(r)&&(t.add(r),!0)})).map((e=>({signature:null,publicKey:e})))}sign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const s of e){const e=s.publicKey.toString();t.has(e)||(t.add(e),r.push(s))}this.signatures=r.map((e=>({signature:null,publicKey:e.publicKey})));const s=this._compile();this._partialSign(s,...r)}partialSign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const s of e){const e=s.publicKey.toString();t.has(e)||(t.add(e),r.push(s))}const s=this._compile();this._partialSign(s,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach((e=>{const t=_(r,e.secretKey);this._addSignature(e.publicKey,P(t))}))}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){G(64===t.length);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0)throw new Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=s.Buffer.from(t)}verifySignatures(e=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){const r={};for(const{signature:s,publicKey:i}of this.signatures)null===s?t&&(r.missing||=[]).push(i):v(s,e,i.toBytes())||(r.invalid||=[]).push(i);return r.invalid||r.missing?r:void 0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),s=this.serializeMessage();if(r){const e=this._getMessageSignednessErrors(s,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+=`\nInvalid signature for public key${1===e.invalid.length?"":"(s)"} [\`${e.invalid.map((e=>e.toBase58())).join("`, `")}\`].`),e.missing&&(t+=`\nMissing signature for public key${1===e.missing.length?"":"(s)"} [\`${e.missing.map((e=>e.toBase58())).join("`, `")}\`].`),new Error(t)}}return this._serialize(s)}_serialize(e){const{signatures:t}=this,r=[];J(r,t.length);const i=r.length+64*t.length+e.length,n=s.Buffer.alloc(i);return G(t.length<256),s.Buffer.from(r).copy(n,0),t.forEach((({signature:e},t)=>{null!==e&&(G(64===e.length,"signature has invalid length"),s.Buffer.from(e).copy(n,r.length+64*t))})),e.copy(n,r.length+64*t.length),G(n.length<=K,`Transaction too large: ${n.length} > ${K}`),n}get keys(){return G(1===this.instructions.length),this.instructions[0].keys.map((e=>e.pubkey))}get programId(){return G(1===this.instructions.length),this.instructions[0].programId}get data(){return G(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=F(t);let i=[];for(let e=0;e<r;e++){const e=ee(t,0,q);i.push(c().encode(s.Buffer.from(e)))}return ae.populate(te.from(t),i)}static populate(e,t=[]){const r=new ae;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach(((t,s)=>{const i={signature:t==c().encode(ne)?null:c().decode(t),publicKey:e.accountKeys[s]};r.signatures.push(i)})),e.instructions.forEach((t=>{const s=t.accounts.map((t=>{const s=e.accountKeys[t];return{pubkey:s,isSigner:r.signatures.some((e=>e.publicKey.toString()===s.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new oe({keys:s,programId:e.accountKeys[t.programIdIndex],data:c().decode(t.data)}))})),r._message=e,r._json=r.toJSON(),r}}class ce{constructor(e){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=e.payerKey,this.instructions=e.instructions,this.recentBlockhash=e.recentBlockhash}static decompile(e,t){const{header:r,compiledInstructions:s,recentBlockhash:i}=e,{numRequiredSignatures:n,numReadonlySignedAccounts:o,numReadonlyUnsignedAccounts:a}=r,c=n-o;G(c>0,"Message header is invalid");const u=e.staticAccountKeys.length-n-a;G(u>=0,"Message header is invalid");const l=e.getAccountKeys(t),d=l.get(0);if(void 0===d)throw new Error("Failed to decompile message because no account keys were found");const h=[];for(const e of s){const t=[];for(const s of e.accountKeyIndexes){const e=l.get(s);if(void 0===e)throw new Error(`Failed to find key for account key index ${s}`);let i;i=s<n?s<c:s<l.staticAccountKeys.length?s-n<u:s-l.staticAccountKeys.length<l.accountKeysFromLookups.writable.length,t.push({pubkey:e,isSigner:s<r.numRequiredSignatures,isWritable:i})}const s=l.get(e.programIdIndex);if(void 0===s)throw new Error(`Failed to find program id for program id index ${e.programIdIndex}`);h.push(new oe({programId:s,data:P(e.data),keys:t}))}return new ce({payerKey:d,instructions:h,recentBlockhash:i})}compileToLegacyMessage(){return te.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return re.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class ue{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)G(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(q));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();J(t,this.signatures.length);const r=d.struct([d.blob(t.length,"encodedSignaturesLength"),d.seq(D(),this.signatures.length,"signatures"),d.blob(e.length,"serializedMessage")]),s=new Uint8Array(2048),i=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},s);return s.slice(0,i)}static deserialize(e){let t=[...e];const r=[],s=F(t);for(let e=0;e<s;e++)r.push(new Uint8Array(ee(t,0,q)));const i=se.deserialize(new Uint8Array(t));return new ue(i,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const s of e){const e=r.findIndex((e=>e.equals(s.publicKey)));G(e>=0,`Cannot sign with non signer key ${s.publicKey.toBase58()}`),this.signatures[e]=_(t,s.secretKey)}}addSignature(e,t){G(64===t.byteLength,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(e)));G(r>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[r]=t}}const le=new O("SysvarC1ock11111111111111111111111111111111"),de=new O("SysvarEpochSchedu1e111111111111111111111111"),he=new O("Sysvar1nstructions1111111111111111111111111"),ge=new O("SysvarRecentB1ockHashes11111111111111111111"),pe=new O("SysvarRent111111111111111111111111111111111"),me=new O("SysvarRewards111111111111111111111111111111"),ye=new O("SysvarS1otHashes111111111111111111111111111"),be=new O("SysvarS1otHistory11111111111111111111111111"),fe=new O("SysvarStakeHistory1111111111111111111111111");class ke extends Error{constructor({action:e,signature:t,transactionMessage:r,logs:s}){const i=s?`Logs: \n${JSON.stringify(s.slice(-10),null,2)}. `:"",n="\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.";let o;switch(e){case"send":o=`Transaction ${t} resulted in an error. \n${r}. `+i+n;break;case"simulate":o=`Simulation failed. \nMessage: ${r}. \n`+i+n;break;default:o=`Unknown action '${e}'`}super(o),this.signature=void 0,this.transactionMessage=void 0,this.transactionLogs=void 0,this.signature=t,this.transactionMessage=r,this.transactionLogs=s||void 0}get transactionError(){return{message:this.transactionMessage,logs:Array.isArray(this.transactionLogs)?this.transactionLogs:void 0}}get logs(){const e=this.transactionLogs;if(null==e||"object"!=typeof e||!("then"in e))return e}async getLogs(e){return Array.isArray(this.transactionLogs)||(this.transactionLogs=new Promise(((t,r)=>{e.getTransaction(this.signature).then((e=>{if(e&&e.meta&&e.meta.logMessages){const r=e.meta.logMessages;this.transactionLogs=r,t(r)}else r(new Error("Log messages not found"))})).catch(r)}))),await this.transactionLogs}}const we={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class Se extends Error{constructor({code:e,message:t,data:r},s){super(null!=s?`${s}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}async function Ie(e,t,r,s){const i=s&&{skipPreflight:s.skipPreflight,preflightCommitment:s.preflightCommitment||s.commitment,maxRetries:s.maxRetries,minContextSlot:s.minContextSlot},n=await e.sendTransaction(t,r,i);let o;if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)o=(await e.confirmTransaction({abortSignal:s?.abortSignal,signature:n,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},s&&s.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){const{nonceInstruction:r}=t.nonceInfo,i=r.keys[0].pubkey;o=(await e.confirmTransaction({abortSignal:s?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:i,nonceValue:t.nonceInfo.nonce,signature:n},s&&s.commitment)).value}else null!=s?.abortSignal&&k.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),o=(await e.confirmTransaction(n,s&&s.commitment)).value;if(o.err){if(null!=n)throw new ke({action:"send",signature:n,transactionMessage:`Status: (${JSON.stringify(o)})`});throw new Error(`Transaction ${n} failed (${JSON.stringify(o)})`)}return n}function Ae(e){return new Promise((t=>setTimeout(t,e)))}function _e(e,t){const r=e.layout.span>=0?e.layout.span:$(e,t),i=s.Buffer.alloc(r),n=Object.assign({instruction:e.index},t);return e.layout.encode(n,i),i}function ve(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.instruction!==e.index)throw new Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`);return r}const Pe=d.nu64("lamportsPerSignature"),Ee=d.struct([d.u32("version"),d.u32("state"),V("authorizedPubkey"),V("nonce"),d.struct([Pe],"feeCalculator")]),Be=Ee.span;class Te{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=Ee.decode(P(e),0);return new Te({authorizedPubkey:new O(t.authorizedPubkey),nonce:new O(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const We=e=>{const t=(0,d.blob)(8,e),{encode:r,decode:i}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),n=t;return n.decode=(e,t)=>{const r=i(e,t);return(0,h.toBigIntLE)(s.Buffer.from(r))},n.encode=(e,t,s)=>{const i=(0,h.toBufferLE)(e,8);return r(i,t,s)},n};class Re{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.u32("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(xe))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a SystemInstruction");return r}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:s}=ve(xe.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new O(s)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t}=ve(xe.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:s}=ve(xe.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new O(s)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{space:t}=ve(xe.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:s,programId:i}=ve(xe.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new O(t),seed:r,space:s,programId:new O(i)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{programId:t}=ve(xe.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new O(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:s}=ve(xe.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new O(t),seed:r,programId:new O(s)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:s,space:i,programId:n}=ve(xe.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new O(t),seed:r,lamports:s,space:i,programId:new O(n)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{authorized:t}=ve(xe.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new O(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ve(xe.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ve(xe.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t}=ve(xe.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new O(t)}}static checkProgramId(e){if(!e.equals(Ce.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const xe=Object.freeze({Create:{index:0,layout:d.struct([d.u32("instruction"),d.ns64("lamports"),d.ns64("space"),V("programId")])},Assign:{index:1,layout:d.struct([d.u32("instruction"),V("programId")])},Transfer:{index:2,layout:d.struct([d.u32("instruction"),We("lamports")])},CreateWithSeed:{index:3,layout:d.struct([d.u32("instruction"),V("base"),H("seed"),d.ns64("lamports"),d.ns64("space"),V("programId")])},AdvanceNonceAccount:{index:4,layout:d.struct([d.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:d.struct([d.u32("instruction"),V("authorized")])},AuthorizeNonceAccount:{index:7,layout:d.struct([d.u32("instruction"),V("authorized")])},Allocate:{index:8,layout:d.struct([d.u32("instruction"),d.ns64("space")])},AllocateWithSeed:{index:9,layout:d.struct([d.u32("instruction"),V("base"),H("seed"),d.ns64("space"),V("programId")])},AssignWithSeed:{index:10,layout:d.struct([d.u32("instruction"),V("base"),H("seed"),V("programId")])},TransferWithSeed:{index:11,layout:d.struct([d.u32("instruction"),We("lamports"),H("seed"),V("programId")])},UpgradeNonceAccount:{index:12,layout:d.struct([d.u32("instruction")])}});class Ce{constructor(){}static createAccount(e){const t=_e(xe.Create,{lamports:e.lamports,space:e.space,programId:P(e.programId.toBuffer())});return new oe({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;return"basePubkey"in e?(t=_e(xe.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:P(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]):(t=_e(xe.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]),new oe({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;return"basePubkey"in e?(t=_e(xe.AssignWithSeed,{base:P(e.basePubkey.toBuffer()),seed:e.seed,programId:P(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=_e(xe.Assign,{programId:P(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new oe({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=_e(xe.CreateWithSeed,{base:P(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:P(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey.equals(e.fromPubkey)||r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new oe({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new ae;"basePubkey"in e&&"seed"in e?t.add(Ce.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:Be,programId:this.programId})):t.add(Ce.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:Be,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=_e(xe.InitializeNonceAccount,{authorized:P(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:ge,isSigner:!1,isWritable:!1},{pubkey:pe,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new oe(r)}static nonceAdvance(e){const t=_e(xe.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:ge,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new oe(r)}static nonceWithdraw(e){const t=_e(xe.WithdrawNonceAccount,{lamports:e.lamports});return new oe({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:ge,isSigner:!1,isWritable:!1},{pubkey:pe,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=_e(xe.AuthorizeNonceAccount,{authorized:P(e.newAuthorizedPubkey.toBuffer())});return new oe({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;return"basePubkey"in e?(t=_e(xe.AllocateWithSeed,{base:P(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:P(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=_e(xe.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new oe({keys:r,programId:this.programId,data:t})}}Ce.programId=new O("11111111111111111111111111111111");const Oe=K-300;class Ne{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/Ne.chunkSize)+1+1)}static async load(e,t,r,i,n){{const s=await e.getMinimumBalanceForRentExemption(n.length),o=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return k.error("Program load failed, account is already executable"),!1;o.data.length!==n.length&&(a=a||new ae,a.add(Ce.allocate({accountPubkey:r.publicKey,space:n.length}))),o.owner.equals(i)||(a=a||new ae,a.add(Ce.assign({accountPubkey:r.publicKey,programId:i}))),o.lamports<s&&(a=a||new ae,a.add(Ce.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:s-o.lamports})))}else a=(new ae).add(Ce.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:s>0?s:1,space:n.length,programId:i}));null!==a&&await Ie(e,a,[t,r],{commitment:"confirmed"})}const o=d.struct([d.u32("instruction"),d.u32("offset"),d.u32("bytesLength"),d.u32("bytesLengthPadding"),d.seq(d.u8("byte"),d.offset(d.u32(),-8),"bytes")]),a=Ne.chunkSize;let c=0,u=n,l=[];for(;u.length>0;){const n=u.slice(0,a),d=s.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:n,bytesLength:0,bytesLengthPadding:0},d);const h=(new ae).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:i,data:d});if(l.push(Ie(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await Ae(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(l);{const n=d.struct([d.u32("instruction")]),o=s.Buffer.alloc(n.span);n.encode({instruction:1},o);const a=(new ae).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:pe,isSigner:!1,isWritable:!1}],programId:i,data:o}),c="processed",u=await e.sendTransaction(a,[t,r],{preflightCommitment:c}),{context:l,value:h}=await e.confirmTransaction({signature:u,lastValidBlockHeight:a.lastValidBlockHeight,blockhash:a.recentBlockhash},c);if(h.err)throw new Error(`Transaction ${u} failed (${JSON.stringify(h)})`);for(;;){try{if(await e.getSlot({commitment:c})>l.slot)break}catch{}await new Promise((e=>setTimeout(e,Math.round(200))))}}return!0}}Ne.chunkSize=Oe;const Le=new O("BPFLoader2111111111111111111111111111111111");class Ke{static getMinNumSignatures(e){return Ne.getMinNumSignatures(e)}static load(e,t,r,s,i){return Ne.load(e,t,r,i,s)}}function ze(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var qe,Ye;function je(){if(Ye)return qe;Ye=1;var e=Object.prototype.toString,t=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};function r(s,i){var n,o,a,c,u,l,d;if(!0===s)return"true";if(!1===s)return"false";switch(typeof s){case"object":if(null===s)return null;if(s.toJSON&&"function"==typeof s.toJSON)return r(s.toJSON(),i);if("[object Array]"===(d=e.call(s))){for(a="[",o=s.length-1,n=0;n<o;n++)a+=r(s[n],!0)+",";return o>-1&&(a+=r(s[n],!0)),a+"]"}if("[object Object]"===d){for(o=(c=t(s).sort()).length,a="",n=0;n<o;)void 0!==(l=r(s[u=c[n]],!1))&&(a&&(a+=","),a+=JSON.stringify(u)+":"+l),n++;return"{"+a+"}"}return JSON.stringify(s);case"function":case"undefined":return i?null:void 0;case"string":return JSON.stringify(s);default:return isFinite(s)?s:null}}return qe=function(e){var t=r(e,!1);if(void 0!==t)return""+t}}var Me=ze(je());function Ue(e){let t=0;for(;e>1;)e/=2,t++;return t}class Ve{constructor(e,t,r,s,i){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=s,this.firstNormalSlot=i}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const r=Ue(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-Ue(32)-1;return[r,e-(this.getSlotsInEpoch(r)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+Ue(32)):this.slotsPerEpoch}}var De=globalThis.fetch;class He extends y.vE{constructor(e,t,r){super((e=>{const r=(0,y.kb)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return this.underlyingSocket="socket"in r?r.socket:r,r}),e,t,r),this.underlyingSocket=void 0}call(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(new Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class $e{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=function(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.typeIndex!==e.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(Fe,e),r=e.length-56;G(r>=0,"lookup table is invalid"),G(r%32==0,"lookup table is invalid");const s=r/32,{addresses:i}=d.struct([d.seq(V(),s,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new O(t.authority[0]):void 0,addresses:i.map((e=>new O(e)))}}}const Fe={index:1,layout:d.struct([d.u32("typeIndex"),We("deactivationSlot"),d.nu64("lastExtendedSlot"),d.u8("lastExtendedStartIndex"),d.u8(),d.seq(V(),d.offset(d.u8(),-1),"authority")])},Je=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i,Ge=(0,g.au)((0,g.KJ)(O),(0,g.Yj)(),(e=>new O(e))),Xe=(0,g.PV)([(0,g.Yj)(),(0,g.eu)("base64")]),Ze=(0,g.au)((0,g.KJ)(s.Buffer),Xe,(e=>s.Buffer.from(e[0],"base64"))),Qe=3e4;function et(e){let t,r;if("string"==typeof e)t=e;else if(e){const{commitment:s,...i}=e;t=s,r=i}return{commitment:t,config:r}}function tt(e){return e.map((e=>"memcmp"in e?{...e,memcmp:{...e.memcmp,encoding:e.memcmp.encoding??"base58"}}:e))}function rt(e){return(0,g.KC)([(0,g.NW)({jsonrpc:(0,g.eu)("2.0"),id:(0,g.Yj)(),result:e}),(0,g.NW)({jsonrpc:(0,g.eu)("2.0"),id:(0,g.Yj)(),error:(0,g.NW)({code:(0,g.L5)(),message:(0,g.Yj)(),data:(0,g.lq)((0,g.bz)())})})])}const st=rt((0,g.L5)());function it(e){return(0,g.au)(rt(e),st,(t=>"error"in t?t:{...t,result:(0,g.vt)(t.result,e)}))}function nt(e){return it((0,g.NW)({context:(0,g.NW)({slot:(0,g.ai)()}),value:e}))}function ot(e){return(0,g.NW)({context:(0,g.NW)({slot:(0,g.ai)()}),value:e})}function at(e,t){return 0===e?new re({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new O(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)}))),addressTableLookups:t.addressTableLookups}):new te(t)}const ct=(0,g.NW)({foundation:(0,g.ai)(),foundationTerm:(0,g.ai)(),initial:(0,g.ai)(),taper:(0,g.ai)(),terminal:(0,g.ai)()}),ut=it((0,g.YO)((0,g.me)((0,g.NW)({epoch:(0,g.ai)(),effectiveSlot:(0,g.ai)(),amount:(0,g.ai)(),postBalance:(0,g.ai)(),commission:(0,g.lq)((0,g.me)((0,g.ai)()))})))),lt=(0,g.YO)((0,g.NW)({slot:(0,g.ai)(),prioritizationFee:(0,g.ai)()})),dt=(0,g.NW)({total:(0,g.ai)(),validator:(0,g.ai)(),foundation:(0,g.ai)(),epoch:(0,g.ai)()}),ht=(0,g.NW)({epoch:(0,g.ai)(),slotIndex:(0,g.ai)(),slotsInEpoch:(0,g.ai)(),absoluteSlot:(0,g.ai)(),blockHeight:(0,g.lq)((0,g.ai)()),transactionCount:(0,g.lq)((0,g.ai)())}),gt=(0,g.NW)({slotsPerEpoch:(0,g.ai)(),leaderScheduleSlotOffset:(0,g.ai)(),warmup:(0,g.zM)(),firstNormalEpoch:(0,g.ai)(),firstNormalSlot:(0,g.ai)()}),pt=(0,g.g1)((0,g.Yj)(),(0,g.YO)((0,g.ai)())),mt=(0,g.me)((0,g.KC)([(0,g.NW)({}),(0,g.Yj)()])),yt=(0,g.NW)({err:mt}),bt=(0,g.eu)("receivedSignature"),ft=(0,g.NW)({"solana-core":(0,g.Yj)(),"feature-set":(0,g.lq)((0,g.ai)())}),kt=(0,g.NW)({program:(0,g.Yj)(),programId:Ge,parsed:(0,g.L5)()}),wt=(0,g.NW)({programId:Ge,accounts:(0,g.YO)(Ge),data:(0,g.Yj)()}),St=nt((0,g.NW)({err:(0,g.me)((0,g.KC)([(0,g.NW)({}),(0,g.Yj)()])),logs:(0,g.me)((0,g.YO)((0,g.Yj)())),accounts:(0,g.lq)((0,g.me)((0,g.YO)((0,g.me)((0,g.NW)({executable:(0,g.zM)(),owner:(0,g.Yj)(),lamports:(0,g.ai)(),data:(0,g.YO)((0,g.Yj)()),rentEpoch:(0,g.lq)((0,g.ai)())}))))),unitsConsumed:(0,g.lq)((0,g.ai)()),returnData:(0,g.lq)((0,g.me)((0,g.NW)({programId:(0,g.Yj)(),data:(0,g.PV)([(0,g.Yj)(),(0,g.eu)("base64")])}))),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)((0,g.KC)([kt,wt]))}))))})),It=nt((0,g.NW)({byIdentity:(0,g.g1)((0,g.Yj)(),(0,g.YO)((0,g.ai)())),range:(0,g.NW)({firstSlot:(0,g.ai)(),lastSlot:(0,g.ai)()})})),At=it(ct),_t=it(dt),vt=it(lt),Pt=it(ht),Et=it(gt),Bt=it(pt),Tt=it((0,g.ai)()),Wt=nt((0,g.NW)({total:(0,g.ai)(),circulating:(0,g.ai)(),nonCirculating:(0,g.ai)(),nonCirculatingAccounts:(0,g.YO)(Ge)})),Rt=(0,g.NW)({amount:(0,g.Yj)(),uiAmount:(0,g.me)((0,g.ai)()),decimals:(0,g.ai)(),uiAmountString:(0,g.lq)((0,g.Yj)())}),xt=nt((0,g.YO)((0,g.NW)({address:Ge,amount:(0,g.Yj)(),uiAmount:(0,g.me)((0,g.ai)()),decimals:(0,g.ai)(),uiAmountString:(0,g.lq)((0,g.Yj)())}))),Ct=nt((0,g.YO)((0,g.NW)({pubkey:Ge,account:(0,g.NW)({executable:(0,g.zM)(),owner:Ge,lamports:(0,g.ai)(),data:Ze,rentEpoch:(0,g.ai)()})}))),Ot=(0,g.NW)({program:(0,g.Yj)(),parsed:(0,g.L5)(),space:(0,g.ai)()}),Nt=nt((0,g.YO)((0,g.NW)({pubkey:Ge,account:(0,g.NW)({executable:(0,g.zM)(),owner:Ge,lamports:(0,g.ai)(),data:Ot,rentEpoch:(0,g.ai)()})}))),Lt=nt((0,g.YO)((0,g.NW)({lamports:(0,g.ai)(),address:Ge}))),Kt=(0,g.NW)({executable:(0,g.zM)(),owner:Ge,lamports:(0,g.ai)(),data:Ze,rentEpoch:(0,g.ai)()}),zt=(0,g.NW)({pubkey:Ge,account:Kt}),qt=(0,g.au)((0,g.KC)([(0,g.KJ)(s.Buffer),Ot]),(0,g.KC)([Xe,Ot]),(e=>Array.isArray(e)?(0,g.vt)(e,Ze):e)),Yt=(0,g.NW)({executable:(0,g.zM)(),owner:Ge,lamports:(0,g.ai)(),data:qt,rentEpoch:(0,g.ai)()}),jt=(0,g.NW)({pubkey:Ge,account:Yt}),Mt=(0,g.NW)({state:(0,g.KC)([(0,g.eu)("active"),(0,g.eu)("inactive"),(0,g.eu)("activating"),(0,g.eu)("deactivating")]),active:(0,g.ai)(),inactive:(0,g.ai)()}),Ut=it((0,g.YO)((0,g.NW)({signature:(0,g.Yj)(),slot:(0,g.ai)(),err:mt,memo:(0,g.me)((0,g.Yj)()),blockTime:(0,g.lq)((0,g.me)((0,g.ai)()))}))),Vt=it((0,g.YO)((0,g.NW)({signature:(0,g.Yj)(),slot:(0,g.ai)(),err:mt,memo:(0,g.me)((0,g.Yj)()),blockTime:(0,g.lq)((0,g.me)((0,g.ai)()))}))),Dt=(0,g.NW)({subscription:(0,g.ai)(),result:ot(Kt)}),Ht=(0,g.NW)({pubkey:Ge,account:Kt}),$t=(0,g.NW)({subscription:(0,g.ai)(),result:ot(Ht)}),Ft=(0,g.NW)({parent:(0,g.ai)(),slot:(0,g.ai)(),root:(0,g.ai)()}),Jt=(0,g.NW)({subscription:(0,g.ai)(),result:Ft}),Gt=(0,g.KC)([(0,g.NW)({type:(0,g.KC)([(0,g.eu)("firstShredReceived"),(0,g.eu)("completed"),(0,g.eu)("optimisticConfirmation"),(0,g.eu)("root")]),slot:(0,g.ai)(),timestamp:(0,g.ai)()}),(0,g.NW)({type:(0,g.eu)("createdBank"),parent:(0,g.ai)(),slot:(0,g.ai)(),timestamp:(0,g.ai)()}),(0,g.NW)({type:(0,g.eu)("frozen"),slot:(0,g.ai)(),timestamp:(0,g.ai)(),stats:(0,g.NW)({numTransactionEntries:(0,g.ai)(),numSuccessfulTransactions:(0,g.ai)(),numFailedTransactions:(0,g.ai)(),maxTransactionsPerEntry:(0,g.ai)()})}),(0,g.NW)({type:(0,g.eu)("dead"),slot:(0,g.ai)(),timestamp:(0,g.ai)(),err:(0,g.Yj)()})]),Xt=(0,g.NW)({subscription:(0,g.ai)(),result:Gt}),Zt=(0,g.NW)({subscription:(0,g.ai)(),result:ot((0,g.KC)([yt,bt]))}),Qt=(0,g.NW)({subscription:(0,g.ai)(),result:(0,g.ai)()}),er=(0,g.NW)({pubkey:(0,g.Yj)(),gossip:(0,g.me)((0,g.Yj)()),tpu:(0,g.me)((0,g.Yj)()),rpc:(0,g.me)((0,g.Yj)()),version:(0,g.me)((0,g.Yj)())}),tr=(0,g.NW)({votePubkey:(0,g.Yj)(),nodePubkey:(0,g.Yj)(),activatedStake:(0,g.ai)(),epochVoteAccount:(0,g.zM)(),epochCredits:(0,g.YO)((0,g.PV)([(0,g.ai)(),(0,g.ai)(),(0,g.ai)()])),commission:(0,g.ai)(),lastVote:(0,g.ai)(),rootSlot:(0,g.me)((0,g.ai)())}),rr=it((0,g.NW)({current:(0,g.YO)(tr),delinquent:(0,g.YO)(tr)})),sr=(0,g.KC)([(0,g.eu)("processed"),(0,g.eu)("confirmed"),(0,g.eu)("finalized")]),ir=(0,g.NW)({slot:(0,g.ai)(),confirmations:(0,g.me)((0,g.ai)()),err:mt,confirmationStatus:(0,g.lq)(sr)}),nr=nt((0,g.YO)((0,g.me)(ir))),or=it((0,g.ai)()),ar=(0,g.NW)({accountKey:Ge,writableIndexes:(0,g.YO)((0,g.ai)()),readonlyIndexes:(0,g.YO)((0,g.ai)())}),cr=(0,g.NW)({signatures:(0,g.YO)((0,g.Yj)()),message:(0,g.NW)({accountKeys:(0,g.YO)((0,g.Yj)()),header:(0,g.NW)({numRequiredSignatures:(0,g.ai)(),numReadonlySignedAccounts:(0,g.ai)(),numReadonlyUnsignedAccounts:(0,g.ai)()}),instructions:(0,g.YO)((0,g.NW)({accounts:(0,g.YO)((0,g.ai)()),data:(0,g.Yj)(),programIdIndex:(0,g.ai)()})),recentBlockhash:(0,g.Yj)(),addressTableLookups:(0,g.lq)((0,g.YO)(ar))})}),ur=(0,g.NW)({pubkey:Ge,signer:(0,g.zM)(),writable:(0,g.zM)(),source:(0,g.lq)((0,g.KC)([(0,g.eu)("transaction"),(0,g.eu)("lookupTable")]))}),lr=(0,g.NW)({accountKeys:(0,g.YO)(ur),signatures:(0,g.YO)((0,g.Yj)())}),dr=(0,g.NW)({parsed:(0,g.L5)(),program:(0,g.Yj)(),programId:Ge}),hr=(0,g.NW)({accounts:(0,g.YO)(Ge),data:(0,g.Yj)(),programId:Ge}),gr=(0,g.KC)([hr,dr]),pr=(0,g.KC)([(0,g.NW)({parsed:(0,g.L5)(),program:(0,g.Yj)(),programId:(0,g.Yj)()}),(0,g.NW)({accounts:(0,g.YO)((0,g.Yj)()),data:(0,g.Yj)(),programId:(0,g.Yj)()})]),mr=(0,g.au)(gr,pr,(e=>"accounts"in e?(0,g.vt)(e,hr):(0,g.vt)(e,dr))),yr=(0,g.NW)({signatures:(0,g.YO)((0,g.Yj)()),message:(0,g.NW)({accountKeys:(0,g.YO)(ur),instructions:(0,g.YO)(mr),recentBlockhash:(0,g.Yj)(),addressTableLookups:(0,g.lq)((0,g.me)((0,g.YO)(ar)))})}),br=(0,g.NW)({accountIndex:(0,g.ai)(),mint:(0,g.Yj)(),owner:(0,g.lq)((0,g.Yj)()),programId:(0,g.lq)((0,g.Yj)()),uiTokenAmount:Rt}),fr=(0,g.NW)({writable:(0,g.YO)(Ge),readonly:(0,g.YO)(Ge)}),kr=(0,g.NW)({err:mt,fee:(0,g.ai)(),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)((0,g.NW)({accounts:(0,g.YO)((0,g.ai)()),data:(0,g.Yj)(),programIdIndex:(0,g.ai)()}))})))),preBalances:(0,g.YO)((0,g.ai)()),postBalances:(0,g.YO)((0,g.ai)()),logMessages:(0,g.lq)((0,g.me)((0,g.YO)((0,g.Yj)()))),preTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),postTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),loadedAddresses:(0,g.lq)(fr),computeUnitsConsumed:(0,g.lq)((0,g.ai)())}),wr=(0,g.NW)({err:mt,fee:(0,g.ai)(),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)(mr)})))),preBalances:(0,g.YO)((0,g.ai)()),postBalances:(0,g.YO)((0,g.ai)()),logMessages:(0,g.lq)((0,g.me)((0,g.YO)((0,g.Yj)()))),preTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),postTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),loadedAddresses:(0,g.lq)(fr),computeUnitsConsumed:(0,g.lq)((0,g.ai)())}),Sr=(0,g.KC)([(0,g.eu)(0),(0,g.eu)("legacy")]),Ir=(0,g.NW)({pubkey:(0,g.Yj)(),lamports:(0,g.ai)(),postBalance:(0,g.me)((0,g.ai)()),rewardType:(0,g.me)((0,g.Yj)()),commission:(0,g.lq)((0,g.me)((0,g.ai)()))}),Ar=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:cr,meta:(0,g.me)(kr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),_r=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),vr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:lr,meta:(0,g.me)(kr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Pr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:yr,meta:(0,g.me)(wr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Er=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:lr,meta:(0,g.me)(wr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Br=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Tr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:cr,meta:(0,g.me)(kr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)())}))),Wr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),signatures:(0,g.YO)((0,g.Yj)()),blockTime:(0,g.me)((0,g.ai)())}))),Rr=it((0,g.me)((0,g.NW)({slot:(0,g.ai)(),meta:(0,g.me)(kr),blockTime:(0,g.lq)((0,g.me)((0,g.ai)())),transaction:cr,version:(0,g.lq)(Sr)}))),xr=it((0,g.me)((0,g.NW)({slot:(0,g.ai)(),transaction:yr,meta:(0,g.me)(wr),blockTime:(0,g.lq)((0,g.me)((0,g.ai)())),version:(0,g.lq)(Sr)}))),Cr=nt((0,g.NW)({blockhash:(0,g.Yj)(),lastValidBlockHeight:(0,g.ai)()})),Or=nt((0,g.zM)()),Nr=(0,g.NW)({slot:(0,g.ai)(),numTransactions:(0,g.ai)(),numSlots:(0,g.ai)(),samplePeriodSecs:(0,g.ai)()}),Lr=it((0,g.YO)(Nr)),Kr=nt((0,g.me)((0,g.NW)({feeCalculator:(0,g.NW)({lamportsPerSignature:(0,g.ai)()})}))),zr=it((0,g.Yj)()),qr=it((0,g.Yj)()),Yr=(0,g.NW)({err:mt,logs:(0,g.YO)((0,g.Yj)()),signature:(0,g.Yj)()}),jr=(0,g.NW)({result:ot(Yr),subscription:(0,g.ai)()}),Mr={"solana-client":"js/1.0.0-maintenance"};class Ur{constructor(e,t){let r,s,i,n,o,a;var c;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const e={};return async t=>{const{commitment:r,config:s}=et(t),i=this._buildArgs([],r,void 0,s),n=Me(i);return e[n]=e[n]??(async()=>{try{const e=await this._rpcRequest("getBlockHeight",i),t=(0,g.vt)(e,it((0,g.ai)()));if("error"in t)throw new Se(t.error,"failed to get block height information");return t.result}finally{delete e[n]}})(),await e[n]}})(),t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,s=t.httpHeaders,i=t.fetch,n=t.fetchMiddleware,o=t.disableRetryOnRateLimit,a=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function(e){const t=e.match(Je);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);const[r,s,i,n]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==i?null:parseInt(i.slice(1),10);return`${o}//${s}${null==a?"":`:${a+1}`}${n}`}(e),this._rpcClient=function(e,t,r,s,i,n){const o=r||De;let a;return null!=n&&k.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),s&&(a=async(e,t)=>{const r=await new Promise(((r,i)=>{try{s(e,t,((e,t)=>r([e,t])))}catch(e){i(e)}}));return await o(...r)}),new(m())((async(r,s)=>{const n={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},Mr)};try{let t,r=5,c=500;for(;t=a?await a(e,n):await o(e,n),429===t.status&&!0!==i&&(r-=1,0!==r);)k.error(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${c}ms delay...`),await Ae(c),c*=2;const u=await t.text();t.ok?s(null,u):s(new Error(`${t.status} ${t.statusText}: ${u}`))}catch(e){e instanceof Error&&s(e)}}),{})}(e,s,i,n,o,a),this._rpcRequest=(c=this._rpcClient,(e,t)=>new Promise(((r,s)=>{c.request(e,t,((e,t)=>{e?s(e):r(t)}))}))),this._rpcBatchRequest=function(e){return t=>new Promise(((r,s)=>{0===t.length&&r([]);const i=t.map((t=>e.request(t.methodName,t.args)));e.request(i,((e,t)=>{e?s(e):r(t)}))}))}(this._rpcClient),this._rpcWebSocket=new He(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgs([e.toBase58()],r,void 0,s),n=await this._rpcRequest("getBalance",i),o=(0,g.vt)(n,nt((0,g.ai)()));if("error"in o)throw new Se(o.error,`failed to get balance for ${e.toBase58()}`);return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=(0,g.vt)(t,it((0,g.me)((0,g.ai)())));if("error"in r)throw new Se(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,g.vt)(e,it((0,g.ai)()));if("error"in t)throw new Se(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,g.vt)(e,Tt);if("error"in t)throw new Se(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),s=(0,g.vt)(r,Wt);if("error"in s)throw new Se(s.error,"failed to get supply");return s.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),s=await this._rpcRequest("getTokenSupply",r),i=(0,g.vt)(s,nt(Rt));if("error"in i)throw new Se(i.error,"failed to get token supply");return i.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),s=await this._rpcRequest("getTokenAccountBalance",r),i=(0,g.vt)(s,nt(Rt));if("error"in i)throw new Se(i.error,"failed to get token account balance");return i.result}async getTokenAccountsByOwner(e,t,r){const{commitment:s,config:i}=et(r);let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});const o=this._buildArgs(n,s,"base64",i),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,g.vt)(a,Ct);if("error"in c)throw new Se(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let s=[e.toBase58()];"mint"in t?s.push({mint:t.mint.toBase58()}):s.push({programId:t.programId.toBase58()});const i=this._buildArgs(s,r,"jsonParsed"),n=await this._rpcRequest("getTokenAccountsByOwner",i),o=(0,g.vt)(n,Nt);if("error"in o)throw new Se(o.error,`failed to get token accounts owned by account ${e.toBase58()}`);return o.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],s=await this._rpcRequest("getLargestAccounts",r),i=(0,g.vt)(s,Lt);if("error"in i)throw new Se(i.error,"failed to get largest accounts");return i.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),s=await this._rpcRequest("getTokenLargestAccounts",r),i=(0,g.vt)(s,xt);if("error"in i)throw new Se(i.error,"failed to get token largest accounts");return i.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgs([e.toBase58()],r,"base64",s),n=await this._rpcRequest("getAccountInfo",i),o=(0,g.vt)(n,nt((0,g.me)(Kt)));if("error"in o)throw new Se(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getParsedAccountInfo(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",s),n=await this._rpcRequest("getAccountInfo",i),o=(0,g.vt)(n,nt((0,g.me)(Yt)));if("error"in o)throw new Se(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(t){throw new Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:s}=et(t),i=e.map((e=>e.toBase58())),n=this._buildArgs([i],r,"jsonParsed",s),o=await this._rpcRequest("getMultipleAccounts",n),a=(0,g.vt)(o,nt((0,g.YO)((0,g.me)(Yt))));if("error"in a)throw new Se(a.error,`failed to get info for accounts ${i}`);return a.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:s}=et(t),i=e.map((e=>e.toBase58())),n=this._buildArgs([i],r,"base64",s),o=await this._rpcRequest("getMultipleAccounts",n),a=(0,g.vt)(o,nt((0,g.YO)((0,g.me)(Kt))));if("error"in a)throw new Se(a.error,`failed to get info for accounts ${i}`);return a.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:s,config:i}=et(t),n=this._buildArgs([e.toBase58()],s,void 0,{...i,epoch:null!=r?r:i?.epoch}),o=await this._rpcRequest("getStakeActivation",n),a=(0,g.vt)(o,it(Mt));if("error"in a)throw new Se(a.error,`failed to get Stake Activation ${e.toBase58()}`);return a.result}async getProgramAccounts(e,t){const{commitment:r,config:s}=et(t),{encoding:i,...n}=s||{},o=this._buildArgs([e.toBase58()],r,i||"base64",{...n,...n.filters?{filters:tt(n.filters)}:null}),a=await this._rpcRequest("getProgramAccounts",o),c=(0,g.YO)(zt),u=!0===n.withContext?(0,g.vt)(a,nt(c)):(0,g.vt)(a,it(c));if("error"in u)throw new Se(u.error,`failed to get accounts owned by program ${e.toBase58()}`);return u.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",s),n=await this._rpcRequest("getProgramAccounts",i),o=(0,g.vt)(n,it((0,g.YO)(jt)));if("error"in o)throw new Se(o.error,`failed to get accounts owned by program ${e.toBase58()}`);return o.result}async confirmTransaction(e,t){let r,s;if("string"==typeof e)r=e;else{const t=e;if(t.abortSignal?.aborted)return Promise.reject(t.abortSignal.reason);r=t.signature}try{s=c().decode(r)}catch(e){throw new Error("signature must be base58 encoded: "+r)}return G(64===s.length,"signature has invalid length"),"string"==typeof e?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise(((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",(()=>{r(e.reason)})))}))}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,s,i=!1;return{abortConfirmation:()=>{s&&(s(),s=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)},confirmationPromise:new Promise(((n,o)=>{try{r=this.onSignature(t,((e,t)=>{r=void 0;const s={context:t,value:e};n({__type:ie.PROCESSED,response:s})}),e);const a=new Promise((e=>{null==r?e():s=this._onSubscriptionStateChange(r,(t=>{"subscribed"===t&&e()}))}));(async()=>{if(await a,i)return;const r=await this.getSignatureStatus(t);if(i)return;if(null==r)return;const{context:s,value:c}=r;if(null!=c)if(c?.err)o(c.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}i=!0,n({__type:ie.PROCESSED,response:{context:s,value:c}})}})()}catch(e){o(e)}}))}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:s}}){let i=!1;const n=new Promise((t=>{const s=async()=>{try{return await this.getBlockHeight(e)}catch(e){return-1}};(async()=>{let e=await s();if(!i){for(;e<=r;){if(await Ae(1e3),i)return;if(e=await s(),i)return}t({__type:ie.BLOCKHEIGHT_EXCEEDED})}})()})),{abortConfirmation:o,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:s}),c=this.getCancellationPromise(t);let u;try{const e=await Promise.race([c,a,n]);if(e.__type!==ie.PROCESSED)throw new Y(s);u=e.response}finally{i=!0,o()}return u}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:s,nonceValue:i,signature:n}}){let o=!1;const a=new Promise((t=>{let n=i,a=null;const c=async()=>{try{const{context:t,value:i}=await this.getNonceAndContext(s,{commitment:e,minContextSlot:r});return a=t.slot,i?.nonce}catch(e){return n}};(async()=>{if(n=await c(),!o)for(;;){if(i!==n)return void t({__type:ie.NONCE_INVALID,slotInWhichNonceDidAdvance:a});if(await Ae(2e3),o)return;if(n=await c(),o)return}})()})),{abortConfirmation:c,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:n}),l=this.getCancellationPromise(t);let d;try{const t=await Promise.race([l,u,a]);if(t.__type===ie.PROCESSED)d=t.response;else{let s;for(;;){const e=await this.getSignatureStatus(n);if(null==e)break;if(!(e.context.slot<(t.slotInWhichNonceDidAdvance??r))){s=e;break}await Ae(400)}if(!s?.value)throw new M(n);{const t=e||"finalized",{confirmationStatus:r}=s.value;switch(t){case"processed":case"recent":if("processed"!==r&&"confirmed"!==r&&"finalized"!==r)throw new M(n);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==r&&"finalized"!==r)throw new M(n);break;case"finalized":case"max":case"root":if("finalized"!==r)throw new M(n)}d={context:s.context,value:{err:s.value.err}}}}}finally{o=!0,c()}return d}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r;const s=new Promise((t=>{let s=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":s=this._confirmTransactionInitialTimeout||3e4}r=setTimeout((()=>t({__type:ie.TIMED_OUT,timeoutMs:s})),s)})),{abortConfirmation:i,confirmationPromise:n}=this.getTransactionConfirmationPromise({commitment:e,signature:t});let o;try{const e=await Promise.race([n,s]);if(e.__type!==ie.PROCESSED)throw new j(t,e.timeoutMs/1e3);o=e.response}finally{clearTimeout(r),i()}return o}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=(0,g.vt)(e,it((0,g.YO)(er)));if("error"in t)throw new Se(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),s=(0,g.vt)(r,rr);if("error"in s)throw new Se(s.error,"failed to get vote accounts");return s.result}async getSlot(e){const{commitment:t,config:r}=et(e),s=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlot",s),n=(0,g.vt)(i,it((0,g.ai)()));if("error"in n)throw new Se(n.error,"failed to get slot");return n.result}async getSlotLeader(e){const{commitment:t,config:r}=et(e),s=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlotLeader",s),n=(0,g.vt)(i,it((0,g.Yj)()));if("error"in n)throw new Se(n.error,"failed to get slot leader");return n.result}async getSlotLeaders(e,t){const r=[e,t],s=await this._rpcRequest("getSlotLeaders",r),i=(0,g.vt)(s,it((0,g.YO)(Ge)));if("error"in i)throw new Se(i.error,"failed to get slot leaders");return i.result}async getSignatureStatus(e,t){const{context:r,value:s}=await this.getSignatureStatuses([e],t);return G(1===s.length),{context:r,value:s[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const s=await this._rpcRequest("getSignatureStatuses",r),i=(0,g.vt)(s,nr);if("error"in i)throw new Se(i.error,"failed to get signature status");return i.result}async getTransactionCount(e){const{commitment:t,config:r}=et(e),s=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getTransactionCount",s),n=(0,g.vt)(i,it((0,g.ai)()));if("error"in n)throw new Se(n.error,"failed to get transaction count");return n.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),s=(0,g.vt)(r,At);if("error"in s)throw new Se(s.error,"failed to get inflation");return s.result}async getInflationReward(e,t,r){const{commitment:s,config:i}=et(r),n=this._buildArgs([e.map((e=>e.toBase58()))],s,void 0,{...i,epoch:null!=t?t:i?.epoch}),o=await this._rpcRequest("getInflationReward",n),a=(0,g.vt)(o,ut);if("error"in a)throw new Se(a.error,"failed to get inflation reward");return a.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]),t=(0,g.vt)(e,_t);if("error"in t)throw new Se(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){const{commitment:t,config:r}=et(e),s=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getEpochInfo",s),n=(0,g.vt)(i,Pt);if("error"in n)throw new Se(n.error,"failed to get epoch info");return n.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=(0,g.vt)(e,Et);if("error"in t)throw new Se(t.error,"failed to get epoch schedule");const r=t.result;return new Ve(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,g.vt)(e,Bt);if("error"in t)throw new Se(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),s=await this._rpcRequest("getMinimumBalanceForRentExemption",r),i=(0,g.vt)(s,or);return"error"in i?(k.warn("Unable to fetch minimum balance for rent exemption"),0):i.result}async getRecentBlockhashAndContext(e){const{context:t,value:{blockhash:r}}=await this.getLatestBlockhashAndContext(e);return{context:t,value:{blockhash:r,feeCalculator:{get lamportsPerSignature(){throw new Error("The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee for a given message.")},toJSON:()=>({})}}}}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,g.vt)(t,Lr);if("error"in r)throw new Se(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),s=await this._rpcRequest("getFeeCalculatorForBlockhash",r),i=(0,g.vt)(s,Kr);if("error"in i)throw new Se(i.error,"failed to get fee calculator");const{context:n,value:o}=i.result;return{context:n,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){const r=P(e.serialize()).toString("base64"),s=this._buildArgs([r],t),i=await this._rpcRequest("getFeeForMessage",s),n=(0,g.vt)(i,nt((0,g.me)((0,g.ai)())));if("error"in n)throw new Se(n.error,"failed to get fee for message");if(null===n.result)throw new Error("invalid blockhash");return n.result}async getRecentPrioritizationFees(e){const t=e?.lockedWritableAccounts?.map((e=>e.toBase58())),r=t?.length?[t]:[],s=await this._rpcRequest("getRecentPrioritizationFees",r),i=(0,g.vt)(s,vt);if("error"in i)throw new Se(i.error,"failed to get recent prioritization fees");return i.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=et(e),s=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getLatestBlockhash",s),n=(0,g.vt)(i,Cr);if("error"in n)throw new Se(n.error,"failed to get latest blockhash");return n.result}async isBlockhashValid(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgs([e],r,void 0,s),n=await this._rpcRequest("isBlockhashValid",i),o=(0,g.vt)(n,Or);if("error"in o)throw new Se(o.error,"failed to determine if the blockhash `"+e+"`is valid");return o.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=(0,g.vt)(e,it(ft));if("error"in t)throw new Se(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=(0,g.vt)(e,it((0,g.Yj)()));if("error"in t)throw new Se(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,s),n=await this._rpcRequest("getBlock",i);try{switch(s?.transactionDetails){case"accounts":{const e=(0,g.vt)(n,vr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.vt)(n,_r);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.vt)(n,Ar);if("error"in e)throw e.error;const{result:t}=e;return t?{...t,transactions:t.transactions.map((({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:at(r,e.message)},version:r})))}:null}}}catch(e){throw new Se(e,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",s),n=await this._rpcRequest("getBlock",i);try{switch(s?.transactionDetails){case"accounts":{const e=(0,g.vt)(n,Er);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.vt)(n,Br);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.vt)(n,Pr);if("error"in e)throw e.error;return e.result}}}catch(e){throw new Se(e,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){const{commitment:s,...i}=e;r=s,t=i}const s=this._buildArgs([],r,"base64",t),i=await this._rpcRequest("getBlockProduction",s),n=(0,g.vt)(i,It);if("error"in n)throw new Se(n.error,"failed to get block production information");return n.result}async getTransaction(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,s),n=await this._rpcRequest("getTransaction",i),o=(0,g.vt)(n,Rr);if("error"in o)throw new Se(o.error,"failed to get transaction");const a=o.result;return a?{...a,transaction:{...a.transaction,message:at(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){const{commitment:r,config:s}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",s),n=await this._rpcRequest("getTransaction",i),o=(0,g.vt)(n,xr);if("error"in o)throw new Se(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){const{commitment:r,config:s}=et(t),i=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",s)})));return(await this._rpcBatchRequest(i)).map((e=>{const t=(0,g.vt)(e,xr);if("error"in t)throw new Se(t.error,"failed to get transactions");return t.result}))}async getTransactions(e,t){const{commitment:r,config:s}=et(t),i=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,s)})));return(await this._rpcBatchRequest(i)).map((e=>{const t=(0,g.vt)(e,Rr);if("error"in t)throw new Se(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:at(r.version,r.transaction.message)}}:r}))}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),s=await this._rpcRequest("getBlock",r),i=(0,g.vt)(s,Tr);if("error"in i)throw new Se(i.error,"failed to get confirmed block");const n=i.result;if(!n)throw new Error("Confirmed block "+e+" not found");const o={...n,transactions:n.transactions.map((({transaction:e,meta:t})=>{const r=new te(e.message);return{meta:t,transaction:{...e,message:r}}}))};return{...o,transactions:o.transactions.map((({transaction:e,meta:t})=>({meta:t,transaction:ae.populate(e.message,e.signatures)})))}}async getBlocks(e,t,r){const s=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),i=await this._rpcRequest("getBlocks",s),n=(0,g.vt)(i,it((0,g.YO)((0,g.ai)())));if("error"in n)throw new Se(n.error,"failed to get blocks");return n.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),s=await this._rpcRequest("getBlock",r),i=(0,g.vt)(s,Wr);if("error"in i)throw new Se(i.error,"failed to get block");const n=i.result;if(!n)throw new Error("Block "+e+" not found");return n}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),s=await this._rpcRequest("getBlock",r),i=(0,g.vt)(s,Wr);if("error"in i)throw new Se(i.error,"failed to get confirmed block");const n=i.result;if(!n)throw new Error("Confirmed block "+e+" not found");return n}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),s=await this._rpcRequest("getTransaction",r),i=(0,g.vt)(s,Rr);if("error"in i)throw new Se(i.error,"failed to get transaction");const n=i.result;if(!n)return n;const o=new te(n.transaction.message),a=n.transaction.signatures;return{...n,transaction:ae.populate(o,a)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),s=await this._rpcRequest("getTransaction",r),i=(0,g.vt)(s,xr);if("error"in i)throw new Se(i.error,"failed to get confirmed transaction");return i.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((e=>{const t=(0,g.vt)(e,xr);if("error"in t)throw new Se(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(e,t,r){let s={},i=await this.getFirstAvailableBlock();for(;!("until"in s)&&!(--t<=0||t<i);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(s.until=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let n=await this.getSlot("finalized");for(;!("before"in s||++r>n);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(s.before=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}return(await this.getConfirmedSignaturesForAddress2(e,s)).map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const s=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getConfirmedSignaturesForAddress2",s),n=(0,g.vt)(i,Ut);if("error"in n)throw new Se(n.error,"failed to get confirmed signatures for address");return n.result}async getSignaturesForAddress(e,t,r){const s=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getSignaturesForAddress",s),n=(0,g.vt)(i,Vt);if("error"in n)throw new Se(n.error,"failed to get signatures for address");return n.result}async getAddressLookupTable(e,t){const{context:r,value:s}=await this.getAccountInfoAndContext(e,t);let i=null;return null!==s&&(i=new $e({key:e,state:$e.deserialize(s.data)})),{context:r,value:i}}async getNonceAndContext(e,t){const{context:r,value:s}=await this.getAccountInfoAndContext(e,t);let i=null;return null!==s&&(i=Te.fromAccountData(s.data)),{context:r,value:i}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),s=(0,g.vt)(r,zr);if("error"in s)throw new Se(s.error,`airdrop to ${e.toBase58()} failed`);return s.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await Ae(100);const e=Date.now()-this._blockhashInfo.lastFetch>=Qe;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let e=0;e<50;e++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await Ae(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=et(e),s=this._buildArgs([],t,"base64",r),i=await this._rpcRequest("getStakeMinimumDelegation",s),n=(0,g.vt)(i,nt((0,g.ai)()));if("error"in n)throw new Se(n.error,"failed to get stake minimum delegation");return n.result}async simulateTransaction(e,t,r){if("message"in e){const i=e.serialize(),n=s.Buffer.from(i).toString("base64");if(Array.isArray(t)||void 0!==r)throw new Error("Invalid arguments");const o=t||{};o.encoding="base64","commitment"in o||(o.commitment=this.commitment),t&&"object"==typeof t&&"innerInstructions"in t&&(o.innerInstructions=t.innerInstructions);const a=[n,o],c=await this._rpcRequest("simulateTransaction",a),u=(0,g.vt)(c,St);if("error"in u)throw new Error("failed to simulate transaction: "+u.error.message);return u.result}let i;if(e instanceof ae){let t=e;i=new ae,i.feePayer=t.feePayer,i.instructions=e.instructions,i.nonceInfo=t.nonceInfo,i.signatures=t.signatures}else i=ae.populate(e),i._message=i._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const n=t;if(i.nonceInfo&&n)i.sign(...n);else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);if(i.lastValidBlockHeight=t.lastValidBlockHeight,i.recentBlockhash=t.blockhash,!n)break;if(i.sign(...n),!i.signature)throw new Error("!signature");const r=i.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}e=!0}}const o=i._compile(),a=o.serialize(),c=i._serialize(a).toString("base64"),u={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:o.nonProgramIds()).map((e=>e.toBase58()));u.accounts={encoding:"base64",addresses:e}}n&&(u.sigVerify=!0),t&&"object"==typeof t&&"innerInstructions"in t&&(u.innerInstructions=t.innerInstructions);const l=[c,u],d=await this._rpcRequest("simulateTransaction",l),h=(0,g.vt)(d,St);if("error"in h){let e;if("data"in h.error&&(e=h.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);k.error(h.error.message,r)}throw new ke({action:"simulate",signature:"",transactionMessage:h.error.message,logs:e})}return h.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const s=t;if(e.nonceInfo)e.sign(...s);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(e.lastValidBlockHeight=r.lastValidBlockHeight,e.recentBlockhash=r.blockhash,e.sign(...s),!e.signature)throw new Error("!signature");const i=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(i)){this._blockhashInfo.transactionSignatures.push(i);break}t=!0}}const i=e.serialize();return await this.sendRawTransaction(i,r)}async sendRawTransaction(e,t){const r=P(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},s=t&&t.skipPreflight,i=!0===s?"processed":t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),s&&(r.skipPreflight=s),i&&(r.preflightCommitment=i);const n=[e,r],o=await this._rpcRequest("sendTransaction",n),a=(0,g.vt)(o,qr);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new ke({action:s?"send":"simulate",signature:"",transactionMessage:a.error.message,logs:e})}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,k.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([e,t])=>{this._setSubscription(e,{...t,state:"pending"})}))):this._updateSubscriptions()}_setSubscription(e,t){const r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach((e=>{try{e(t.state)}catch{}}))}}_onSubscriptionStateChange(e,t){const r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};const s=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return s.add(t),()=>{s.delete(t),0===s.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&k.log(`Error when closing socket connection: ${e.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void await this._updateSubscriptions();await(async()=>{const{args:s,method:i}=r;try{this._setSubscription(e,{...r,state:"subscribing"});const t=await this._rpcWebSocket.call(i,s);this._setSubscription(e,{...r,serverSubscriptionId:t,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(n){if(k.error(`Received ${n instanceof Error?"":"JSON-RPC "}error calling \`${i}\``,{args:s,error:n}),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:s,unsubscribeMethod:i}=r;if(this._subscriptionsAutoDisposedByRpc.has(s))this._subscriptionsAutoDisposedByRpc.delete(s);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(i,[s])}catch(s){if(s instanceof Error&&k.error(`${i} error:`,s.message),!t())return;return this._setSubscription(e,{...r,state:"subscribed"}),void await this._updateSubscriptions()}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach((e=>{try{e(...t)}catch(e){k.error(e)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Dt);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,s=Me([e.method,t]),i=this._subscriptionsByHash[s];return void 0===i?this._subscriptionsByHash[s]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:i.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=s,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[s];G(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const{commitment:s,config:i}=et(r),n=this._buildArgs([e.toBase58()],s||this._commitment||"finalized","base64",i);return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},n)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,$t);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,s){const{commitment:i,config:n}=et(r),o=this._buildArgs([e.toBase58()],i||this._commitment||"finalized","base64",n||(s?{filters:tt(s)}:void 0));return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},o)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const s=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},s)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,jr);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Jt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Xt);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():k.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,s){const i=t||this._commitment;if(i||r||s){let t={};r&&(t.encoding=r),i&&(t.commitment=i),s&&(t=Object.assign(t,s)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,s){const i=t||this._commitment;if(i&&!["confirmed","finalized"].includes(i))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,s)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Zt);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const s=this._buildArgs([e],r||this._commitment||"finalized"),i=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(i)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return i}onSignatureWithOptions(e,t,r){const{commitment:s,...i}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},n=this._buildArgs([e],s,void 0,i),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Qt);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Vr{constructor(e){this._keypair=void 0,this._keypair=e??S()}static generate(){return new Vr(S())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),s=I(t);for(let e=0;e<32;e++)if(r[e]!==s[e])throw new Error("provided secretKey is invalid")}return new Vr({publicKey:r,secretKey:e})}static fromSeed(e){const t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Vr({publicKey:t,secretKey:r})}get publicKey(){return new O(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Dr=Object.freeze({CreateLookupTable:{index:0,layout:d.struct([d.u32("instruction"),We("recentSlot"),d.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:d.struct([d.u32("instruction")])},ExtendLookupTable:{index:2,layout:d.struct([d.u32("instruction"),We(),d.seq(V(),d.offset(d.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:d.struct([d.u32("instruction")])},CloseLookupTable:{index:4,layout:d.struct([d.u32("instruction")])}});class Hr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.u32("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(Dr))if(s.index==t){r=e;break}if(!r)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return r}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);const{recentSlot:t}=ve(Dr.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw new Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`);const{addresses:t}=ve(Dr.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map((e=>new O(e)))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals($r.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}class $r{constructor(){}static createLookupTable(e){const[t,r]=O.findProgramAddressSync([e.authority.toBuffer(),(0,h.toBufferLE)(BigInt(e.recentSlot),8)],this.programId),s=_e(Dr.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:Ce.programId,isSigner:!1,isWritable:!1}];return[new oe({programId:this.programId,keys:i,data:s}),t]}static freezeLookupTable(e){const t=_e(Dr.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new oe({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=_e(Dr.ExtendLookupTable,{addresses:e.addresses.map((e=>e.toBytes()))}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:Ce.programId,isSigner:!1,isWritable:!1}),new oe({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=_e(Dr.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new oe({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=_e(Dr.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new oe({programId:this.programId,keys:r,data:t})}}$r.programId=new O("AddressLookupTab1e1111111111111111111111111");class Fr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.u8("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(Jr))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return r}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=ve(Jr.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=ve(Jr.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=ve(Jr.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=ve(Jr.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(Gr.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Jr=Object.freeze({RequestUnits:{index:0,layout:d.struct([d.u8("instruction"),d.u32("units"),d.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:d.struct([d.u8("instruction"),d.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:d.struct([d.u8("instruction"),d.u32("units")])},SetComputeUnitPrice:{index:3,layout:d.struct([d.u8("instruction"),We("microLamports")])}});class Gr{constructor(){}static requestUnits(e){const t=_e(Jr.RequestUnits,e);return new oe({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=_e(Jr.RequestHeapFrame,e);return new oe({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=_e(Jr.SetComputeUnitLimit,e);return new oe({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=_e(Jr.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new oe({keys:[],programId:this.programId,data:t})}}Gr.programId=new O("ComputeBudget111111111111111111111111111111");const Xr=d.struct([d.u8("numSignatures"),d.u8("padding"),d.u16("signatureOffset"),d.u16("signatureInstructionIndex"),d.u16("publicKeyOffset"),d.u16("publicKeyInstructionIndex"),d.u16("messageDataOffset"),d.u16("messageDataSize"),d.u16("messageInstructionIndex")]);class Zr{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:i,instructionIndex:n}=e;G(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),G(64===i.length,`Signature must be 64 bytes but received ${i.length} bytes`);const o=Xr.span,a=o+t.length,c=a+i.length,u=s.Buffer.alloc(c+r.length),l=null==n?65535:n;return Xr.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:l,publicKeyOffset:o,publicKeyInstructionIndex:l,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:l},u),u.fill(t,o),u.fill(i,a),u.fill(r,c),new oe({keys:[],programId:Zr.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:s}=e;G(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const e=Vr.fromSecretKey(t),i=e.publicKey.toBytes(),n=_(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:n,instructionIndex:s})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}Zr.programId=new O("Ed25519SigVerify111111111111111111111111111"),f.bI.utils.isValidPrivateKey;const Qr=f.bI.getPublicKey,es=d.struct([d.u8("numSignatures"),d.u16("signatureOffset"),d.u8("signatureInstructionIndex"),d.u16("ethAddressOffset"),d.u8("ethAddressInstructionIndex"),d.u16("messageDataOffset"),d.u16("messageDataSize"),d.u8("messageInstructionIndex"),d.blob(20,"ethAddress"),d.blob(64,"signature"),d.u8("recoveryId")]);class ts{constructor(){}static publicKeyToEthAddress(e){G(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return s.Buffer.from((0,b.lY)(P(e))).slice(-20)}catch(e){throw new Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:s,recoveryId:i,instructionIndex:n}=e;return ts.createInstructionWithEthAddress({ethAddress:ts.publicKeyToEthAddress(t),message:r,signature:s,recoveryId:i,instructionIndex:n})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:i,recoveryId:n,instructionIndex:o=0}=e;let a;a="string"==typeof t?t.startsWith("0x")?s.Buffer.from(t.substr(2),"hex"):s.Buffer.from(t,"hex"):t,G(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+i.length+1,l=s.Buffer.alloc(es.span+r.length);return es.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:P(i),ethAddress:P(a),recoveryId:n},l),l.fill(P(r),es.span),new oe({keys:[],programId:ts.programId,data:l})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:i}=e;G(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const e=P(t),n=Qr(e,!1).slice(1),o=s.Buffer.from((0,b.lY)(P(r))),[a,c]=((e,t)=>{const r=f.bI.sign(e,t);return[r.toCompactRawBytes(),r.recovery]})(o,e);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:a,recoveryId:c,instructionIndex:i})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}var rs;ts.programId=new O("KeccakSecp256k11111111111111111111111111111");const ss=new O("StakeConfig11111111111111111111111111111111");class is{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class ns{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}rs=ns,ns.default=new rs(0,0,O.default);class os{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.u32("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(as))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a StakeInstruction");return r}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=ve(as.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new is(new O(t.staker),new O(t.withdrawer)),lockup:new ns(r.unixTimestamp,r.epoch,new O(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),ve(as.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=ve(as.Authorize,e.data),s={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new O(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(s.custodianPubkey=e.keys[3].pubkey),s}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:s,authorityOwner:i}=ve(as.AuthorizeWithSeed,e.data),n={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:s,authorityOwner:new O(i),newAuthorizedPubkey:new O(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(n.custodianPubkey=e.keys[3].pubkey),n}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ve(as.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ve(as.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ve(as.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ve(as.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(us.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const as=Object.freeze({Initialize:{index:0,layout:d.struct([d.u32("instruction"),((e="authorized")=>d.struct([V("staker"),V("withdrawer")],e))(),((e="lockup")=>d.struct([d.ns64("unixTimestamp"),d.ns64("epoch"),V("custodian")],e))()])},Authorize:{index:1,layout:d.struct([d.u32("instruction"),V("newAuthorized"),d.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:d.struct([d.u32("instruction")])},Split:{index:3,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},Withdraw:{index:4,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},Deactivate:{index:5,layout:d.struct([d.u32("instruction")])},Merge:{index:7,layout:d.struct([d.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:d.struct([d.u32("instruction"),V("newAuthorized"),d.u32("stakeAuthorizationType"),H("authoritySeed"),V("authorityOwner")])}}),cs=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class us{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:s}=e,i=s||ns.default,n=_e(as.Initialize,{authorized:{staker:P(r.staker.toBuffer()),withdrawer:P(r.withdrawer.toBuffer())},lockup:{unixTimestamp:i.unixTimestamp,epoch:i.epoch,custodian:P(i.custodian.toBuffer())}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:pe,isSigner:!1,isWritable:!1}],programId:this.programId,data:n};return new oe(o)}static createAccountWithSeed(e){const t=new ae;t.add(Ce.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:s,lockup:i}=e;return t.add(this.initialize({stakePubkey:r,authorized:s,lockup:i}))}static createAccount(e){const t=new ae;t.add(Ce.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:s,lockup:i}=e;return t.add(this.initialize({stakePubkey:r,authorized:s,lockup:i}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:s}=e,i=_e(as.Delegate);return(new ae).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:fe,isSigner:!1,isWritable:!1},{pubkey:ss,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:s,stakeAuthorizationType:i,custodianPubkey:n}=e,o=_e(as.Authorize,{newAuthorized:P(s.toBuffer()),stakeAuthorizationType:i.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return n&&a.push({pubkey:n,isSigner:!0,isWritable:!1}),(new ae).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:s,authorityOwner:i,newAuthorizedPubkey:n,stakeAuthorizationType:o,custodianPubkey:a}=e,c=_e(as.AuthorizeWithSeed,{newAuthorized:P(n.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:s,authorityOwner:P(i.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:le,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!0,isWritable:!1}),(new ae).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:s,lamports:i}=e,n=_e(as.Split,{lamports:i});return new oe({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static split(e,t){const r=new ae;return r.add(Ce.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId})),r.add(this.splitInstruction(e))}static splitWithSeed(e,t){const{stakePubkey:r,authorizedPubkey:s,splitStakePubkey:i,basePubkey:n,seed:o,lamports:a}=e,c=new ae;return c.add(Ce.allocate({accountPubkey:i,basePubkey:n,seed:o,space:this.space,programId:this.programId})),t&&t>0&&c.add(Ce.transfer({fromPubkey:e.authorizedPubkey,toPubkey:i,lamports:t})),c.add(this.splitInstruction({stakePubkey:r,authorizedPubkey:s,splitStakePubkey:i,lamports:a}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:s}=e,i=_e(as.Merge);return(new ae).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:fe,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:s,lamports:i,custodianPubkey:n}=e,o=_e(as.Withdraw,{lamports:i}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:fe,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return n&&a.push({pubkey:n,isSigner:!0,isWritable:!1}),(new ae).add({keys:a,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,s=_e(as.Deactivate);return(new ae).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}}us.programId=new O("Stake11111111111111111111111111111111111111"),us.space=200;class ls{constructor(e,t,r,s){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=s}}class ds{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.u32("instruction").decode(e.data);let r;for(const[e,s]of Object.entries(hs))if(s.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a VoteInstruction");return r}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);const{voteInit:t}=ve(hs.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new ls(new O(t.nodePubkey),new O(t.authorizedVoter),new O(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=ve(hs.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new O(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:s,voteAuthorizationType:i}}=ve(hs.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new O(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new O(s),voteAuthorizationType:{index:i},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ve(hs.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(ps.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const hs=Object.freeze({InitializeAccount:{index:0,layout:d.struct([d.u32("instruction"),((e="voteInit")=>d.struct([V("nodePubkey"),V("authorizedVoter"),V("authorizedWithdrawer"),d.u8("commission")],e))()])},Authorize:{index:1,layout:d.struct([d.u32("instruction"),V("newAuthorized"),d.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:d.struct([d.u32("instruction"),d.ns64("lamports")])},UpdateValidatorIdentity:{index:4,layout:d.struct([d.u32("instruction")])},AuthorizeWithSeed:{index:10,layout:d.struct([d.u32("instruction"),((e="voteAuthorizeWithSeedArgs")=>d.struct([d.u32("voteAuthorizationType"),V("currentAuthorityDerivedKeyOwnerPubkey"),H("currentAuthorityDerivedKeySeed"),V("newAuthorized")],e))()])}}),gs=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class ps{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:s}=e,i=_e(hs.InitializeAccount,{voteInit:{nodePubkey:P(s.nodePubkey.toBuffer()),authorizedVoter:P(s.authorizedVoter.toBuffer()),authorizedWithdrawer:P(s.authorizedWithdrawer.toBuffer()),commission:s.commission}}),n={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:pe,isSigner:!1,isWritable:!1},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i};return new oe(n)}static createAccount(e){const t=new ae;return t.add(Ce.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:s,voteAuthorizationType:i}=e,n=_e(hs.Authorize,{newAuthorized:P(s.toBuffer()),voteAuthorizationType:i.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new ae).add({keys:o,programId:this.programId,data:n})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:s,newAuthorizedPubkey:i,voteAuthorizationType:n,votePubkey:o}=e,a=_e(hs.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:P(r.toBuffer()),currentAuthorityDerivedKeySeed:s,newAuthorized:P(i.toBuffer()),voteAuthorizationType:n.index}}),c=[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new ae).add({keys:c,programId:this.programId,data:a})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:s,toPubkey:i}=e,n=_e(hs.Withdraw,{lamports:s}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new ae).add({keys:o,programId:this.programId,data:n})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insufficient funds.");return ps.withdraw(e)}static updateValidatorIdentity(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,nodePubkey:s}=e,i=_e(hs.UpdateValidatorIdentity),n=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!0,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new ae).add({keys:n,programId:this.programId,data:i})}}ps.programId=new O("Vote111111111111111111111111111111111111111"),ps.space=3762;const ms=new O("Va1idator1nfo111111111111111111111111111111"),ys=(0,g.NW)({name:(0,g.Yj)(),website:(0,g.lq)((0,g.Yj)()),details:(0,g.lq)((0,g.Yj)()),iconUrl:(0,g.lq)((0,g.Yj)()),keybaseUsername:(0,g.lq)((0,g.Yj)())});class bs{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e];if(2!==F(t))return null;const r=[];for(let e=0;e<2;e++){const e=new O(ee(t,0,x)),s=1===Q(t);r.push({publicKey:e,isSigner:s})}if(r[0].publicKey.equals(ms)&&r[1].isSigner){const e=H().decode(s.Buffer.from(t)),i=JSON.parse(e);return(0,g.vA)(i,ys),new bs(r[1].publicKey,i)}return null}}const fs=new O("Vote111111111111111111111111111111111111111"),ks=d.struct([V("nodePubkey"),V("authorizedWithdrawer"),d.u8("commission"),d.nu64(),d.seq(d.struct([d.nu64("slot"),d.u32("confirmationCount")]),d.offset(d.u32(),-8),"votes"),d.u8("rootSlotValid"),d.nu64("rootSlot"),d.nu64(),d.seq(d.struct([d.nu64("epoch"),V("authorizedVoter")]),d.offset(d.u32(),-8),"authorizedVoters"),d.struct([d.seq(d.struct([V("authorizedPubkey"),d.nu64("epochOfLastAuthorizedSwitch"),d.nu64("targetEpoch")]),32,"buf"),d.nu64("idx"),d.u8("isEmpty")],"priorVoters"),d.nu64(),d.seq(d.struct([d.nu64("epoch"),d.nu64("credits"),d.nu64("prevCredits")]),d.offset(d.u32(),-8),"epochCredits"),d.struct([d.nu64("slot"),d.nu64("timestamp")],"lastTimestamp")]);class ws{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=ks.decode(P(e),4);let r=t.rootSlot;return t.rootSlotValid||(r=null),new ws({nodePubkey:new O(t.nodePubkey),authorizedWithdrawer:new O(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(Ss),priorVoters:As(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function Ss({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new O(e)}}function Is({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new O(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}function As({buf:e,idx:t,isEmpty:r}){return r?[]:[...e.slice(t+1).map(Is),...e.slice(0,t).map(Is)]}const _s={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function vs(e,t){const r=!1===t?"http":"https";if(!e)return _s[r].devnet;const s=_s[r][e];if(!s)throw new Error(`Unknown ${r} cluster: ${e}`);return s}async function Ps(e,t,r,s){let i,n;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")||r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")?(i=r,n=s):n=r;const o=n&&{skipPreflight:n.skipPreflight,preflightCommitment:n.preflightCommitment||n.commitment,minContextSlot:n.minContextSlot},a=await e.sendRawTransaction(t,o),c=n&&n.commitment,u=i?e.confirmTransaction(i,c):e.confirmTransaction(a,c),l=(await u).value;if(l.err){if(null!=a)throw new ke({action:o?.skipPreflight?"send":"simulate",signature:a,transactionMessage:`Status: (${JSON.stringify(l)})`});throw new Error(`Raw transaction ${a} failed (${JSON.stringify(l)})`)}return a}const Es=1e9}}]);
//# sourceMappingURL=main-4.0.1-643.js.map