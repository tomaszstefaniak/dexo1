{"version":3,"file":"main-4.0.1-150.js","mappings":"iHACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,wBCAtD,IAAIC,EAAmBC,MAAQA,KAAKD,kBAAqBJ,OAAOM,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BT,OAAOC,eAAeM,EAAGG,EAAI,CAAEE,YAAY,EAAMC,IAAK,WAAa,OAAOL,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGK,EAAgBT,MAAQA,KAAKS,cAAiB,SAASN,EAAGN,GAC1D,IAAK,IAAIa,KAAKP,EAAa,YAANO,GAAoBf,OAAOgB,UAAUC,eAAeC,KAAKhB,EAASa,IAAIX,EAAgBF,EAASM,EAAGO,EAC3H,EACAf,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDW,EAAa,EAAQ,OAAoBZ,GACzCY,EAAa,EAAQ,MAAYZ,E,wBCZjC,IAAIE,EAAmBC,MAAQA,KAAKD,kBAAqBJ,OAAOM,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BT,OAAOC,eAAeM,EAAGG,EAAI,CAAEE,YAAY,EAAMC,IAAK,WAAa,OAAOL,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGU,EAAsBd,MAAQA,KAAKc,qBAAwBnB,OAAOM,OAAS,SAAUC,EAAGa,GACxFpB,OAAOC,eAAeM,EAAG,UAAW,CAAEK,YAAY,EAAMT,MAAOiB,GAClE,EAAI,SAASb,EAAGa,GACbb,EAAW,QAAIa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,CAAC,EACd,GAAW,MAAPF,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBT,OAAOgB,UAAUC,eAAeC,KAAKI,EAAKb,IAAIL,EAAgBoB,EAAQF,EAAKb,GAEtI,OADAU,EAAmBK,EAAQF,GACpBE,CACX,EACAxB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuB,kBAAoBvB,EAAQwB,YAAcxB,EAAQyB,mBAAqBzB,EAAQ0B,mBAAqB1B,EAAQ2B,WAAa3B,EAAQ4B,mBAAgB,EACzJ,MAAMC,EAAgB,EAAQ,OACxBC,EAASX,EAAa,EAAQ,QAC9BY,EAAkB,EAAQ,OAIhC,MAAMH,EACF,WAAAI,CAAYC,GACR9B,KAAK8B,qBAAuBA,CAChC,CASA,aAAAC,CAAcC,EAAMC,EAAmBC,GAAoB,GAEvD,IAAIC,EAAmC,MAA7BnC,KAAK8B,qBAA+B9B,KAAK8B,qBAAqBE,GAAQ,KAChF,OAAW,MAAPG,EACOnC,KAAKoC,kBAAkBD,EAAKF,QAA6DA,EAAoBjC,KAAK+B,gBAG7HI,EAAMd,EAAYgB,SAASL,GAChB,MAAPG,EACOnC,KAAKoC,kBAAkBD,EAAKF,QAA6DA,EAAoBjC,KAAK+B,gBAE7HI,EAAMf,EAAkBiB,SAASL,GACtB,MAAPG,EACOnC,KAAKoC,kBAAkBD,EAAKF,QAA6DA,EAAoBjC,KAAK+B,eAEzHG,GACAC,EAAM,IAAIZ,EAAmBS,EAAM,qBAAsB,mCAClDhC,KAAKoC,kBAAkBD,EAAKF,QAA6DA,EAAoBjC,KAAK+B,qBAF7H,GAIJ,CAOA,oBAAAO,CAAqBC,EAAML,GAAoB,GAC3C,MAAMF,GAAO,EAAIN,EAAcc,mBAAmBD,GAClD,OAAe,MAARP,EACD,KACAhC,KAAK+B,cAAcC,EAAMhC,KAAKsC,qBAAsBJ,EAC9D,CAKA,UAAAO,CAAWC,GACP,MAAMP,EAAqB,MAAdO,EAAMH,MAAgBvC,KAAKsC,qBAAqBI,EAAMH,MAAM,IACrE,IAAIhB,GAAoB,EAAG,0DAC/B,MAAMvB,KAAKoC,kBAAkBD,EAAKnC,KAAKyC,WAC3C,CACA,iBAAAL,CAAkBD,EAAKF,GACnB,OAAW,MAAPE,EACO,MAC4B,mBAA5BQ,MAAMC,mBACbD,MAAMC,kBAAkBT,EAAKF,GAE1BE,EACX,EAEJtC,EAAQ4B,cAAgBA,EAUxB5B,EAAQ2B,WAHR,SAAoBM,GAChB,OAAO,IAAIL,EAAcK,EAC7B,EASA,MAAMP,UAA2BoB,MAC7B,WAAAd,CAAYG,KAASa,GACjBC,SAASD,GACT7C,KAAKgC,KAAOA,EACZhC,KAAK+C,KAAO,oBAChB,EAEJlD,EAAQ0B,mBAAqBA,EAO7B,MAAMD,UAA2BqB,MAO7B,WAAAd,CAAYG,EAAMe,KAASF,GACvBC,SAASD,GACT7C,KAAKgC,KAAOA,EACZhC,KAAK+C,KAAO,sBAAsBA,GACtC,EAEJlD,EAAQyB,mBAAqBA,EAQ7B,MAAMD,UAAoBsB,MACtB,WAAAd,CAAYG,EAAMe,KAASF,GACvBC,SAASD,GACT7C,KAAKgC,KAAOA,EACZhC,KAAK+C,KAAO,eAAeA,GAC/B,CACA,eAAOV,CAASL,GACZ,MAAMgB,EAAY3B,EAAY4B,SAASzC,IAAIwB,GAC3C,OAAoB,MAAbgB,EACD,IAAI3B,EAAY2B,EAAUhB,KAAMgB,EAAUD,KAAMC,EAAUE,SAC1D,IACV,CACA,QAAAC,GACI,MAAO,GAAGnD,KAAK+C,SAAS/C,KAAKkD,SACjC,EAEJrD,EAAQwB,YAAcA,EACtBA,EAAY4B,SAAWtD,OAAOyD,QAAQzB,EAAO0B,eAAeC,QAAO,CAACC,GAAMC,EAAKxB,MAC3EuB,EAAIE,IAAIzB,EAAM,CACVA,OACAe,KAAMS,EACNN,QAASvB,EAAO+B,iBAAiBlD,IAAIwB,KAElCuB,IACR,IAAII,KAUP,MAAMvC,UAA0BuB,MAC5B,WAAAd,CAAYG,EAAMe,KAASF,GACvBC,SAASD,GACT7C,KAAKgC,KAAOA,EACZhC,KAAK+C,KAAO,qBAAqBA,GACrC,CACA,eAAOV,CAASL,GACZ,MAAMgB,EAAY5B,EAAkB6B,SAASzC,IAAIwB,GACjD,OAAoB,MAAbgB,EACD,IAAI5B,EAAkB4B,EAAUhB,KAAMgB,EAAUD,KAAMC,EAAUE,SAChE,IACV,CACA,QAAAC,GACI,MAAO,GAAGnD,KAAK+C,SAAS/C,KAAKkD,SACjC,EAEJrD,EAAQuB,kBAAoBA,EAC5BA,EAAkB6B,SAAWrB,EAAgBgC,kB,gBChM7CjE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6D,iBAAmB7D,EAAQwD,mBAAgB,EAMnDxD,EAAQwD,cAAgB,CAEpBQ,mBAAoB,IACpBC,4BAA6B,IAC7BC,6BAA8B,IAC9BC,2BAA4B,IAE5BC,mBAAoB,IACpBC,6BAA8B,KAE9BC,cAAe,IACfC,iBAAkB,KAClBC,iBAAkB,KAClBC,cAAe,KACfC,gBAAiB,KACjBC,qBAAsB,KACtBC,gBAAiB,KACjBC,qBAAsB,KACtBC,gBAAiB,KACjBC,qBAAsB,KACtBC,yBAA0B,KAC1BC,gBAAiB,KACjBC,kBAAmB,KACnBC,eAAgB,KAChBC,oBAAqB,KACrBC,qBAAsB,KACtBC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,uBAAwB,KACxBC,gBAAiB,KAEjBC,+BAAgC,IAChCC,6BAA8B,KAC9BC,6BAA8B,KAC9BC,yBAA0B,KAC1BC,uBAAwB,KACxBC,qBAAsB,KACtBC,kBAAmB,KACnBC,2BAA4B,KAC5BC,iBAAkB,KAClBC,yBAA0B,KAC1BC,iBAAkB,KAClBC,sBAAuB,KACvBC,sBAAuB,KACvBC,sBAAuB,KAEvBC,oBAAqB,IAErBC,WAAY,KAMhBzG,EAAQ6D,iBAAmB,IAAIC,IAAI,CAE/B,CACI9D,EAAQwD,cAAcQ,mBACtB,8CAEJ,CACIhE,EAAQwD,cAAcS,4BACtB,wCAEJ,CACIjE,EAAQwD,cAAcU,6BACtB,2DAEJ,CACIlE,EAAQwD,cAAcW,2BACtB,yDAGJ,CACInE,EAAQwD,cAAcY,mBACtB,qDAEJ,CACIpE,EAAQwD,cAAca,6BACtB,wEAGJ,CAACrE,EAAQwD,cAAcc,cAAe,iCACtC,CAACtE,EAAQwD,cAAce,iBAAkB,qCACzC,CAACvE,EAAQwD,cAAcgB,iBAAkB,oCACzC,CAACxE,EAAQwD,cAAciB,cAAe,iCACtC,CAACzE,EAAQwD,cAAckB,gBAAiB,oCACxC,CAAC1E,EAAQwD,cAAcmB,qBAAsB,yCAC7C,CAAC3E,EAAQwD,cAAcoB,gBAAiB,mCACxC,CAAC5E,EAAQwD,cAAcqB,qBAAsB,yCAC7C,CAAC7E,EAAQwD,cAAcsB,gBAAiB,mCACxC,CAAC9E,EAAQwD,cAAcuB,qBAAsB,yCAC7C,CACI/E,EAAQwD,cAAcwB,yBACtB,8CAEJ,CAAChF,EAAQwD,cAAcyB,gBAAiB,mCACxC,CAACjF,EAAQwD,cAAc0B,kBAAmB,sCAC1C,CAAClF,EAAQwD,cAAc2B,eAAgB,sCACvC,CAACnF,EAAQwD,cAAc4B,oBAAqB,wCAC5C,CAACpF,EAAQwD,cAAc6B,qBAAsB,yCAC7C,CACIrF,EAAQwD,cAAc8B,4BACtB,iDAEJ,CACItF,EAAQwD,cAAc+B,8BACtB,mDAEJ,CACIvF,EAAQwD,cAAcgC,uBACtB,2CAEJ,CAACxF,EAAQwD,cAAciC,gBAAiB,mCAExC,CACIzF,EAAQwD,cAAckC,+BACtB,6DAEJ,CACI1F,EAAQwD,cAAcmC,6BACtB,oDAEJ,CACI3F,EAAQwD,cAAcoC,6BACtB,wDAEJ,CAAC5F,EAAQwD,cAAcqC,yBAA0B,qCACjD,CAAC7F,EAAQwD,cAAcsC,uBAAwB,mCAC/C,CACI9F,EAAQwD,cAAcuC,qBACtB,oDAEJ,CAAC/F,EAAQwD,cAAcwC,kBAAmB,oCAC1C,CACIhG,EAAQwD,cAAcyC,2BACtB,mEAEJ,CAACjG,EAAQwD,cAAc0C,iBAAkB,kCACzC,CAAClG,EAAQwD,cAAc2C,yBAA0B,qCACjD,CAACnG,EAAQwD,cAAc4C,iBAAkB,kCACzC,CACIpG,EAAQwD,cAAc6C,sBACtB,wDAEJ,CACIrG,EAAQwD,cAAc8C,sBACtB,+DAEJ,CACItG,EAAQwD,cAAc+C,sBACtB,mDAGJ,CACIvG,EAAQwD,cAAcgD,oBACtB,6DAGJ,CACIxG,EAAQwD,cAAciD,WACtB,kE,gBCxKR3G,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+D,wBAAqB,EAK7B/D,EAAQ+D,mBAAqB,IAAID,IAAI,CACjC,CACI,EACA,CACI3B,KAAM,EACNkB,QAAS,qCACTH,KAAM,2BAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,kCACTH,KAAM,uBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,+CACTH,KAAM,kBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,+BACTH,KAAM,2BAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,2BACTH,KAAM,uBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,kDACTH,KAAM,wBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,oEACTH,KAAM,sBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,oCACTH,KAAM,wBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,yCACTH,KAAM,qBAGd,CACI,EACA,CACIf,KAAM,EACNkB,QAAS,4CACTH,KAAM,wBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,2BACTH,KAAM,kBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,iCACTH,KAAM,kBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,kCACTH,KAAM,kBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,yBACTH,KAAM,wBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,2BACTH,KAAM,iBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,gCACTH,KAAM,8BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,mCACTH,KAAM,iCAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,yBACTH,KAAM,wBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,wBACTH,KAAM,sBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,qBACTH,KAAM,oBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,oCACTH,KAAM,0BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,yCACTH,KAAM,8BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,uCACTH,KAAM,iBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,6BACTH,KAAM,qBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,6BACTH,KAAM,qBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,2DACTH,KAAM,mBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,oDACTH,KAAM,mBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,gDACTH,KAAM,kBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,sDACTH,KAAM,wBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,wCACTH,KAAM,sBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,0CACTH,KAAM,oBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,qCACTH,KAAM,2BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,+BACTH,KAAM,2BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,iCACTH,KAAM,4BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,gCACTH,KAAM,2BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,uCACTH,KAAM,2BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,sCACTH,KAAM,0BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,iCACTH,KAAM,gCAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,gCACTH,KAAM,+BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,kCACTH,KAAM,8BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,iCACTH,KAAM,6BAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,6BACTH,KAAM,yBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,kCACTH,KAAM,wBAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,0DACTH,KAAM,oCAGd,CACI,GACA,CACIf,KAAM,GACNkB,QAAS,yCACTH,KAAM,sC,gBC7WlBpD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2C,uBAAoB,EAC5B,MAAM+D,EAAc,uCAmBpB1G,EAAQ2C,kBAbR,SAA2BD,GACvB,IAAK,MAAMiE,KAAQjE,EAAM,CACrB,MAAMkE,EAAQD,EAAKC,MAAMF,GACzB,GAAa,MAATE,EACA,SACJ,MAAMC,EAAUD,EAAM,GACtB,IACI,OAAOE,SAASD,EACpB,CACA,MAAOE,GAAK,CAChB,CACA,OAAO,IACX,C","sources":["webpack://@jup-ag/terminal/./node_modules/@metaplex-foundation/cusper/dist/src/types.js","webpack://@jup-ag/terminal/./node_modules/@metaplex-foundation/cusper/dist/src/cusper.js","webpack://@jup-ag/terminal/./node_modules/@metaplex-foundation/cusper/dist/src/resolve-error.js","webpack://@jup-ag/terminal/./node_modules/@metaplex-foundation/cusper/dist/src/errors/anchor.js","webpack://@jup-ag/terminal/./node_modules/@metaplex-foundation/cusper/dist/src/errors/token-lending.js","webpack://@jup-ag/terminal/./node_modules/@metaplex-foundation/cusper/dist/src/parse-error.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./resolve-error\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=cusper.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenLendingError = exports.AnchorError = exports.CustomProgramError = exports.CusperUnknownError = exports.initCusper = exports.ErrorResolver = void 0;\nconst parse_error_1 = require(\"./parse-error\");\nconst anchor = __importStar(require(\"./errors/anchor\"));\nconst token_lending_1 = require(\"./errors/token-lending\");\n// -----------------\n// Error Resolver\n// -----------------\nclass ErrorResolver {\n    constructor(resolveErrorFromCode) {\n        this.resolveErrorFromCode = resolveErrorFromCode;\n    }\n    /**\n     * Attempts to resolve the provided error code to a known or custom error.\n     *\n     * @param captureBoundaryFn is used to exclude everything after (including)\n     * that function from the stack trace if possible\n     * @param fallbackToUnknown unless `false` a {@link CusperUnknownError} is\n     * returned when resolution fails\n     */\n    errorFromCode(code, captureBoundaryFn, fallbackToUnknown = true) {\n        // Try specific program errors first since they're more likely\n        let err = this.resolveErrorFromCode != null ? this.resolveErrorFromCode(code) : null;\n        if (err != null) {\n            return this.passPreparedError(err, captureBoundaryFn !== null && captureBoundaryFn !== void 0 ? captureBoundaryFn : this.errorFromCode);\n        }\n        // Then try errors of known programs\n        err = AnchorError.fromCode(code);\n        if (err != null) {\n            return this.passPreparedError(err, captureBoundaryFn !== null && captureBoundaryFn !== void 0 ? captureBoundaryFn : this.errorFromCode);\n        }\n        err = TokenLendingError.fromCode(code);\n        if (err != null) {\n            return this.passPreparedError(err, captureBoundaryFn !== null && captureBoundaryFn !== void 0 ? captureBoundaryFn : this.errorFromCode);\n        }\n        if (fallbackToUnknown) {\n            err = new CusperUnknownError(code, 'CusperUnknownError', 'cusper does not know this error');\n            return this.passPreparedError(err, captureBoundaryFn !== null && captureBoundaryFn !== void 0 ? captureBoundaryFn : this.errorFromCode);\n        }\n    }\n    /**\n     * Attempts to parse the error code from the provied logs and then resolve it\n     * to a known or custom error.\n     * @param fallbackToUnknown unless `false` a {@link CusperUnknownError} is\n     * returned when resolution fails\n     */\n    errorFromProgramLogs(logs, fallbackToUnknown = true) {\n        const code = (0, parse_error_1.errorCodeFromLogs)(logs);\n        return code == null\n            ? null\n            : this.errorFromCode(code, this.errorFromProgramLogs, fallbackToUnknown);\n    }\n    /**\n     * Throws an error that it attempts to resolve from the logs of the provided error.\n     * If no error can be resolved it throws a {@link CusperUnknownError} instead\n     */\n    throwError(error) {\n        const err = (error.logs != null && this.errorFromProgramLogs(error.logs, true)) ||\n            new CusperUnknownError(-1, 'Error created without logs and thus without error code');\n        throw this.passPreparedError(err, this.throwError);\n    }\n    passPreparedError(err, captureBoundaryFn) {\n        if (err == null)\n            return null;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(err, captureBoundaryFn);\n        }\n        return err;\n    }\n}\nexports.ErrorResolver = ErrorResolver;\n/**\n * Initializes a Custom Program Error Resolver, aka _Cusper_.\n *\n * @param resolveErrorFromCode if provided it will be used to resolve custom\n * errors before falling back to known program errors\n */\nfunction initCusper(resolveErrorFromCode) {\n    return new ErrorResolver(resolveErrorFromCode);\n}\nexports.initCusper = initCusper;\n// -----------------\n// Unknown Error\n// -----------------\n/**\n * This error is returned/raised when an error code couldn't be found or resolved to a\n * custom or known error.\n */\nclass CusperUnknownError extends Error {\n    constructor(code, ...params) {\n        super(...params);\n        this.code = code;\n        this.name = 'CusperUnknownError';\n    }\n}\nexports.CusperUnknownError = CusperUnknownError;\n// -----------------\n// Custom Program Error\n// -----------------\n/**\n * Used by implementers to provide their own errors to be resolved by cusper.\n */\nclass CustomProgramError extends Error {\n    /**\n     * Creates an instance of a {@link CustomProgramError}.\n     *\n     * @param code the error code for which this error was resolved\n     * @param name the name of the error\n     */\n    constructor(code, name, ...params) {\n        super(...params);\n        this.code = code;\n        this.name = `CustomProgramError#${name}`;\n    }\n}\nexports.CustomProgramError = CustomProgramError;\n// -----------------\n// Anchor\n// -----------------\n/**\n * An error raised by the anchor program before getting to the actual program\n * implementation.\n */\nclass AnchorError extends Error {\n    constructor(code, name, ...params) {\n        super(...params);\n        this.code = code;\n        this.name = `AnchorError#${name}`;\n    }\n    static fromCode(code) {\n        const errorMeta = AnchorError.errorMap.get(code);\n        return errorMeta != null\n            ? new AnchorError(errorMeta.code, errorMeta.name, errorMeta.message)\n            : null;\n    }\n    toString() {\n        return `${this.name}: ${this.message}`;\n    }\n}\nexports.AnchorError = AnchorError;\nAnchorError.errorMap = Object.entries(anchor.LangErrorCode).reduce((acc, [key, code]) => {\n    acc.set(code, {\n        code,\n        name: key,\n        message: anchor.LangErrorMessage.get(code),\n    });\n    return acc;\n}, new Map());\n// -----------------\n// Token Lending\n// -----------------\n/**\n * Error raised by the token lending program.\n * Please note that error codes overlap with other _known_ programs as they start at `0`.\n * Thus in some cases they might be wrongly represented and actually not\n * originate from the token lending program.\n */\nclass TokenLendingError extends Error {\n    constructor(code, name, ...params) {\n        super(...params);\n        this.code = code;\n        this.name = `TokenLendingError#${name}`;\n    }\n    static fromCode(code) {\n        const errorMeta = TokenLendingError.errorMap.get(code);\n        return errorMeta != null\n            ? new TokenLendingError(errorMeta.code, errorMeta.name, errorMeta.message)\n            : null;\n    }\n    toString() {\n        return `${this.name}: ${this.message}`;\n    }\n}\nexports.TokenLendingError = TokenLendingError;\nTokenLendingError.errorMap = token_lending_1.tokenLendingErrors;\n//# sourceMappingURL=resolve-error.js.map","\"use strict\";\n// https://github.com/project-serum/anchor/blob/1749a7bd53eec516416a61598290da1431e2910f/ts/src/error.ts\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangErrorMessage = exports.LangErrorCode = void 0;\n/**\n * Maps Error names to Error codes\n *\n * @private\n */\nexports.LangErrorCode = {\n    // Instructions.\n    InstructionMissing: 100,\n    InstructionFallbackNotFound: 101,\n    InstructionDidNotDeserialize: 102,\n    InstructionDidNotSerialize: 103,\n    // IDL instructions.\n    IdlInstructionStub: 1000,\n    IdlInstructionInvalidProgram: 1001,\n    // Constraints.\n    ConstraintMut: 2000,\n    ConstraintHasOne: 2001,\n    ConstraintSigner: 2002,\n    ConstraintRaw: 2003,\n    ConstraintOwner: 2004,\n    ConstraintRentExempt: 2005,\n    ConstraintSeeds: 2006,\n    ConstraintExecutable: 2007,\n    ConstraintState: 2008,\n    ConstraintAssociated: 2009,\n    ConstraintAssociatedInit: 2010,\n    ConstraintClose: 2011,\n    ConstraintAddress: 2012,\n    ConstraintZero: 2013,\n    ConstraintTokenMint: 2014,\n    ConstraintTokenOwner: 2015,\n    ConstraintMintMintAuthority: 2016,\n    ConstraintMintFreezeAuthority: 2017,\n    ConstraintMintDecimals: 2018,\n    ConstraintSpace: 2019,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: 3000,\n    AccountDiscriminatorNotFound: 3001,\n    AccountDiscriminatorMismatch: 3002,\n    AccountDidNotDeserialize: 3003,\n    AccountDidNotSerialize: 3004,\n    AccountNotEnoughKeys: 3005,\n    AccountNotMutable: 3006,\n    AccountOwnedByWrongProgram: 3007,\n    InvalidProgramId: 3008,\n    InvalidProgramExecutable: 3009,\n    AccountNotSigner: 3010,\n    AccountNotSystemOwned: 3011,\n    AccountNotInitialized: 3012,\n    AccountNotProgramData: 3013,\n    // State.\n    StateInvalidAddress: 4000,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: 5000,\n};\n/**\n * Maps Error Codes to Error messages\n * @private\n */\nexports.LangErrorMessage = new Map([\n    // Instructions.\n    [\n        exports.LangErrorCode.InstructionMissing,\n        '8 byte instruction identifier not provided',\n    ],\n    [\n        exports.LangErrorCode.InstructionFallbackNotFound,\n        'Fallback functions are not supported',\n    ],\n    [\n        exports.LangErrorCode.InstructionDidNotDeserialize,\n        'The program could not deserialize the given instruction',\n    ],\n    [\n        exports.LangErrorCode.InstructionDidNotSerialize,\n        'The program could not serialize the given instruction',\n    ],\n    // Idl instructions.\n    [\n        exports.LangErrorCode.IdlInstructionStub,\n        'The program was compiled without idl instructions',\n    ],\n    [\n        exports.LangErrorCode.IdlInstructionInvalidProgram,\n        'The transaction was given an invalid program for the IDL instruction',\n    ],\n    // Constraints.\n    [exports.LangErrorCode.ConstraintMut, 'A mut constraint was violated'],\n    [exports.LangErrorCode.ConstraintHasOne, 'A has_one constraint was violated'],\n    [exports.LangErrorCode.ConstraintSigner, 'A signer constraint was violated'],\n    [exports.LangErrorCode.ConstraintRaw, 'A raw constraint was violated'],\n    [exports.LangErrorCode.ConstraintOwner, 'An owner constraint was violated'],\n    [exports.LangErrorCode.ConstraintRentExempt, 'A rent exempt constraint was violated'],\n    [exports.LangErrorCode.ConstraintSeeds, 'A seeds constraint was violated'],\n    [exports.LangErrorCode.ConstraintExecutable, 'An executable constraint was violated'],\n    [exports.LangErrorCode.ConstraintState, 'A state constraint was violated'],\n    [exports.LangErrorCode.ConstraintAssociated, 'An associated constraint was violated'],\n    [\n        exports.LangErrorCode.ConstraintAssociatedInit,\n        'An associated init constraint was violated',\n    ],\n    [exports.LangErrorCode.ConstraintClose, 'A close constraint was violated'],\n    [exports.LangErrorCode.ConstraintAddress, 'An address constraint was violated'],\n    [exports.LangErrorCode.ConstraintZero, 'Expected zero account discriminant'],\n    [exports.LangErrorCode.ConstraintTokenMint, 'A token mint constraint was violated'],\n    [exports.LangErrorCode.ConstraintTokenOwner, 'A token owner constraint was violated'],\n    [\n        exports.LangErrorCode.ConstraintMintMintAuthority,\n        'A mint mint authority constraint was violated',\n    ],\n    [\n        exports.LangErrorCode.ConstraintMintFreezeAuthority,\n        'A mint freeze authority constraint was violated',\n    ],\n    [\n        exports.LangErrorCode.ConstraintMintDecimals,\n        'A mint decimals constraint was violated',\n    ],\n    [exports.LangErrorCode.ConstraintSpace, 'A space constraint was violated'],\n    // Accounts.\n    [\n        exports.LangErrorCode.AccountDiscriminatorAlreadySet,\n        'The account discriminator was already set on this account',\n    ],\n    [\n        exports.LangErrorCode.AccountDiscriminatorNotFound,\n        'No 8 byte discriminator was found on the account',\n    ],\n    [\n        exports.LangErrorCode.AccountDiscriminatorMismatch,\n        '8 byte discriminator did not match what was expected',\n    ],\n    [exports.LangErrorCode.AccountDidNotDeserialize, 'Failed to deserialize the account'],\n    [exports.LangErrorCode.AccountDidNotSerialize, 'Failed to serialize the account'],\n    [\n        exports.LangErrorCode.AccountNotEnoughKeys,\n        'Not enough account keys given to the instruction',\n    ],\n    [exports.LangErrorCode.AccountNotMutable, 'The given account is not mutable'],\n    [\n        exports.LangErrorCode.AccountOwnedByWrongProgram,\n        'The given account is owned by a different program than expected',\n    ],\n    [exports.LangErrorCode.InvalidProgramId, 'Program ID was not as expected'],\n    [exports.LangErrorCode.InvalidProgramExecutable, 'Program account is not executable'],\n    [exports.LangErrorCode.AccountNotSigner, 'The given account did not sign'],\n    [\n        exports.LangErrorCode.AccountNotSystemOwned,\n        'The given account is not owned by the system program',\n    ],\n    [\n        exports.LangErrorCode.AccountNotInitialized,\n        'The program expected this account to be already initialized',\n    ],\n    [\n        exports.LangErrorCode.AccountNotProgramData,\n        'The given account is not a program data account',\n    ],\n    // State.\n    [\n        exports.LangErrorCode.StateInvalidAddress,\n        'The given state account does not have the correct address',\n    ],\n    // Misc.\n    [\n        exports.LangErrorCode.Deprecated,\n        'The API being used is deprecated and should no longer be used',\n    ],\n]);\n//# sourceMappingURL=anchor.js.map","\"use strict\";\n// Generated via ./scripts/fetch-token-lending-errors.ts\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenLendingErrors = void 0;\n/**\n * Maps error codes to {@link ErrorMeta}.\n * @private\n */\nexports.tokenLendingErrors = new Map([\n    [\n        0,\n        {\n            code: 0,\n            message: 'Failed to unpack instruction data\"',\n            name: 'InstructionUnpackError',\n        },\n    ],\n    [\n        1,\n        {\n            code: 1,\n            message: 'Account is already initialized\"',\n            name: 'AlreadyInitialized',\n        },\n    ],\n    [\n        2,\n        {\n            code: 2,\n            message: 'Lamport balance below rent-exempt threshold\"',\n            name: 'NotRentExempt',\n        },\n    ],\n    [\n        3,\n        {\n            code: 3,\n            message: 'Market authority is invalid\"',\n            name: 'InvalidMarketAuthority',\n        },\n    ],\n    [\n        4,\n        {\n            code: 4,\n            message: 'Market owner is invalid\"',\n            name: 'InvalidMarketOwner',\n        },\n    ],\n    [\n        5,\n        {\n            code: 5,\n            message: 'Input account owner is not the program address\"',\n            name: 'InvalidAccountOwner',\n        },\n    ],\n    [\n        6,\n        {\n            code: 6,\n            message: 'Input token account is not owned by the correct token program id\"',\n            name: 'InvalidTokenOwner',\n        },\n    ],\n    [\n        7,\n        {\n            code: 7,\n            message: 'Input token account is not valid\"',\n            name: 'InvalidTokenAccount',\n        },\n    ],\n    [\n        8,\n        {\n            code: 8,\n            message: 'Input token mint account is not valid\"',\n            name: 'InvalidTokenMint',\n        },\n    ],\n    [\n        9,\n        {\n            code: 9,\n            message: 'Input token program account is not valid\"',\n            name: 'InvalidTokenProgram',\n        },\n    ],\n    [\n        10,\n        {\n            code: 10,\n            message: 'Input amount is invalid\"',\n            name: 'InvalidAmount',\n        },\n    ],\n    [\n        11,\n        {\n            code: 11,\n            message: 'Input config value is invalid\"',\n            name: 'InvalidConfig',\n        },\n    ],\n    [\n        12,\n        {\n            code: 12,\n            message: 'Input account must be a signer\"',\n            name: 'InvalidSigner',\n        },\n    ],\n    [\n        13,\n        {\n            code: 13,\n            message: 'Invalid account input\"',\n            name: 'InvalidAccountInput',\n        },\n    ],\n    [\n        14,\n        {\n            code: 14,\n            message: 'Math operation overflow\"',\n            name: 'MathOverflow',\n        },\n    ],\n    [\n        15,\n        {\n            code: 15,\n            message: 'Token initialize mint failed\"',\n            name: 'TokenInitializeMintFailed',\n        },\n    ],\n    [\n        16,\n        {\n            code: 16,\n            message: 'Token initialize account failed\"',\n            name: 'TokenInitializeAccountFailed',\n        },\n    ],\n    [\n        17,\n        {\n            code: 17,\n            message: 'Token transfer failed\"',\n            name: 'TokenTransferFailed',\n        },\n    ],\n    [\n        18,\n        {\n            code: 18,\n            message: 'Token mint to failed\"',\n            name: 'TokenMintToFailed',\n        },\n    ],\n    [\n        19,\n        {\n            code: 19,\n            message: 'Token burn failed\"',\n            name: 'TokenBurnFailed',\n        },\n    ],\n    [\n        20,\n        {\n            code: 20,\n            message: 'Insufficient liquidity available\"',\n            name: 'InsufficientLiquidity',\n        },\n    ],\n    [\n        21,\n        {\n            code: 21,\n            message: 'Input reserve has collateral disabled\"',\n            name: 'ReserveCollateralDisabled',\n        },\n    ],\n    [\n        22,\n        {\n            code: 22,\n            message: 'Reserve state needs to be refreshed\"',\n            name: 'ReserveStale',\n        },\n    ],\n    [\n        23,\n        {\n            code: 23,\n            message: 'Withdraw amount too small\"',\n            name: 'WithdrawTooSmall',\n        },\n    ],\n    [\n        24,\n        {\n            code: 24,\n            message: 'Withdraw amount too large\"',\n            name: 'WithdrawTooLarge',\n        },\n    ],\n    [\n        25,\n        {\n            code: 25,\n            message: 'Borrow amount too small to receive liquidity after fees\"',\n            name: 'BorrowTooSmall',\n        },\n    ],\n    [\n        26,\n        {\n            code: 26,\n            message: 'Borrow amount too large for deposited collateral\"',\n            name: 'BorrowTooLarge',\n        },\n    ],\n    [\n        27,\n        {\n            code: 27,\n            message: 'Repay amount too small to transfer liquidity\"',\n            name: 'RepayTooSmall',\n        },\n    ],\n    [\n        28,\n        {\n            code: 28,\n            message: 'Liquidation amount too small to receive collateral\"',\n            name: 'LiquidationTooSmall',\n        },\n    ],\n    [\n        29,\n        {\n            code: 29,\n            message: 'Cannot liquidate healthy obligations\"',\n            name: 'ObligationHealthy',\n        },\n    ],\n    [\n        30,\n        {\n            code: 30,\n            message: 'Obligation state needs to be refreshed\"',\n            name: 'ObligationStale',\n        },\n    ],\n    [\n        31,\n        {\n            code: 31,\n            message: 'Obligation reserve limit exceeded\"',\n            name: 'ObligationReserveLimit',\n        },\n    ],\n    [\n        32,\n        {\n            code: 32,\n            message: 'Obligation owner is invalid\"',\n            name: 'InvalidObligationOwner',\n        },\n    ],\n    [\n        33,\n        {\n            code: 33,\n            message: 'Obligation deposits are empty\"',\n            name: 'ObligationDepositsEmpty',\n        },\n    ],\n    [\n        34,\n        {\n            code: 34,\n            message: 'Obligation borrows are empty\"',\n            name: 'ObligationBorrowsEmpty',\n        },\n    ],\n    [\n        35,\n        {\n            code: 35,\n            message: 'Obligation deposits have zero value\"',\n            name: 'ObligationDepositsZero',\n        },\n    ],\n    [\n        36,\n        {\n            code: 36,\n            message: 'Obligation borrows have zero value\"',\n            name: 'ObligationBorrowsZero',\n        },\n    ],\n    [\n        37,\n        {\n            code: 37,\n            message: 'Invalid obligation collateral\"',\n            name: 'InvalidObligationCollateral',\n        },\n    ],\n    [\n        38,\n        {\n            code: 38,\n            message: 'Invalid obligation liquidity\"',\n            name: 'InvalidObligationLiquidity',\n        },\n    ],\n    [\n        39,\n        {\n            code: 39,\n            message: 'Obligation collateral is empty\"',\n            name: 'ObligationCollateralEmpty',\n        },\n    ],\n    [\n        40,\n        {\n            code: 40,\n            message: 'Obligation liquidity is empty\"',\n            name: 'ObligationLiquidityEmpty',\n        },\n    ],\n    [\n        41,\n        {\n            code: 41,\n            message: 'Interest rate is negative\"',\n            name: 'NegativeInterestRate',\n        },\n    ],\n    [\n        42,\n        {\n            code: 42,\n            message: 'Input oracle config is invalid\"',\n            name: 'InvalidOracleConfig',\n        },\n    ],\n    [\n        43,\n        {\n            code: 43,\n            message: 'Input flash loan receiver program account is not valid\"',\n            name: 'InvalidFlashLoanReceiverProgram',\n        },\n    ],\n    [\n        44,\n        {\n            code: 44,\n            message: 'Not enough liquidity after flash loan\"',\n            name: 'NotEnoughLiquidityAfterFlashLoan',\n        },\n    ],\n]);\n//# sourceMappingURL=token-lending.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorCodeFromLogs = void 0;\nconst errorLineRx = /Custom program error: (0x[a-f0-9]+)/i;\n/**\n * Parses an error code included with solana logs\n *\n * @private\n */\nfunction errorCodeFromLogs(logs) {\n    for (const line of logs) {\n        const match = line.match(errorLineRx);\n        if (match == null)\n            continue;\n        const hexCode = match[1];\n        try {\n            return parseInt(hexCode);\n        }\n        catch (_) { }\n    }\n    return null;\n}\nexports.errorCodeFromLogs = errorCodeFromLogs;\n//# sourceMappingURL=parse-error.js.map"],"names":["Object","defineProperty","exports","value","__createBinding","this","create","o","m","k","k2","undefined","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","__setModuleDefault","v","__importStar","mod","__esModule","result","TokenLendingError","AnchorError","CustomProgramError","CusperUnknownError","initCusper","ErrorResolver","parse_error_1","anchor","token_lending_1","constructor","resolveErrorFromCode","errorFromCode","code","captureBoundaryFn","fallbackToUnknown","err","passPreparedError","fromCode","errorFromProgramLogs","logs","errorCodeFromLogs","throwError","error","Error","captureStackTrace","params","super","name","errorMeta","errorMap","message","toString","entries","LangErrorCode","reduce","acc","key","set","LangErrorMessage","Map","tokenLendingErrors","InstructionMissing","InstructionFallbackNotFound","InstructionDidNotDeserialize","InstructionDidNotSerialize","IdlInstructionStub","IdlInstructionInvalidProgram","ConstraintMut","ConstraintHasOne","ConstraintSigner","ConstraintRaw","ConstraintOwner","ConstraintRentExempt","ConstraintSeeds","ConstraintExecutable","ConstraintState","ConstraintAssociated","ConstraintAssociatedInit","ConstraintClose","ConstraintAddress","ConstraintZero","ConstraintTokenMint","ConstraintTokenOwner","ConstraintMintMintAuthority","ConstraintMintFreezeAuthority","ConstraintMintDecimals","ConstraintSpace","AccountDiscriminatorAlreadySet","AccountDiscriminatorNotFound","AccountDiscriminatorMismatch","AccountDidNotDeserialize","AccountDidNotSerialize","AccountNotEnoughKeys","AccountNotMutable","AccountOwnedByWrongProgram","InvalidProgramId","InvalidProgramExecutable","AccountNotSigner","AccountNotSystemOwned","AccountNotInitialized","AccountNotProgramData","StateInvalidAddress","Deprecated","errorLineRx","line","match","hexCode","parseInt","_"],"sourceRoot":""}